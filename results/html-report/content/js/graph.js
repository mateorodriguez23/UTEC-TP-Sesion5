/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 135.0, "minX": 0.0, "maxY": 7292.0, "series": [{"data": [[0.0, 135.0], [0.1, 135.0], [0.2, 135.0], [0.3, 135.0], [0.4, 135.0], [0.5, 135.0], [0.6, 135.0], [0.7, 135.0], [0.8, 135.0], [0.9, 135.0], [1.0, 135.0], [1.1, 135.0], [1.2, 135.0], [1.3, 135.0], [1.4, 135.0], [1.5, 135.0], [1.6, 135.0], [1.7, 135.0], [1.8, 135.0], [1.9, 135.0], [2.0, 135.0], [2.1, 135.0], [2.2, 135.0], [2.3, 135.0], [2.4, 135.0], [2.5, 135.0], [2.6, 135.0], [2.7, 135.0], [2.8, 135.0], [2.9, 135.0], [3.0, 137.0], [3.1, 137.0], [3.2, 137.0], [3.3, 137.0], [3.4, 137.0], [3.5, 137.0], [3.6, 137.0], [3.7, 137.0], [3.8, 137.0], [3.9, 137.0], [4.0, 137.0], [4.1, 137.0], [4.2, 137.0], [4.3, 137.0], [4.4, 137.0], [4.5, 138.0], [4.6, 138.0], [4.7, 138.0], [4.8, 138.0], [4.9, 138.0], [5.0, 138.0], [5.1, 138.0], [5.2, 139.0], [5.3, 139.0], [5.4, 139.0], [5.5, 139.0], [5.6, 139.0], [5.7, 139.0], [5.8, 139.0], [5.9, 140.0], [6.0, 140.0], [6.1, 140.0], [6.2, 140.0], [6.3, 140.0], [6.4, 140.0], [6.5, 140.0], [6.6, 140.0], [6.7, 141.0], [6.8, 141.0], [6.9, 141.0], [7.0, 141.0], [7.1, 141.0], [7.2, 141.0], [7.3, 141.0], [7.4, 143.0], [7.5, 143.0], [7.6, 143.0], [7.7, 143.0], [7.8, 143.0], [7.9, 143.0], [8.0, 143.0], [8.1, 157.0], [8.2, 157.0], [8.3, 157.0], [8.4, 157.0], [8.5, 157.0], [8.6, 157.0], [8.7, 157.0], [8.8, 157.0], [8.9, 162.0], [9.0, 162.0], [9.1, 162.0], [9.2, 162.0], [9.3, 162.0], [9.4, 162.0], [9.5, 162.0], [9.6, 169.0], [9.7, 169.0], [9.8, 169.0], [9.9, 169.0], [10.0, 169.0], [10.1, 169.0], [10.2, 169.0], [10.3, 171.0], [10.4, 171.0], [10.5, 171.0], [10.6, 171.0], [10.7, 171.0], [10.8, 171.0], [10.9, 171.0], [11.0, 171.0], [11.1, 178.0], [11.2, 178.0], [11.3, 178.0], [11.4, 178.0], [11.5, 178.0], [11.6, 178.0], [11.7, 178.0], [11.8, 208.0], [11.9, 208.0], [12.0, 208.0], [12.1, 208.0], [12.2, 208.0], [12.3, 208.0], [12.4, 208.0], [12.5, 211.0], [12.6, 211.0], [12.7, 211.0], [12.8, 211.0], [12.9, 211.0], [13.0, 211.0], [13.1, 211.0], [13.2, 211.0], [13.3, 217.0], [13.4, 217.0], [13.5, 217.0], [13.6, 217.0], [13.7, 217.0], [13.8, 217.0], [13.9, 217.0], [14.0, 220.0], [14.1, 220.0], [14.2, 220.0], [14.3, 220.0], [14.4, 220.0], [14.5, 220.0], [14.6, 220.0], [14.7, 220.0], [14.8, 221.0], [14.9, 221.0], [15.0, 221.0], [15.1, 221.0], [15.2, 221.0], [15.3, 221.0], [15.4, 221.0], [15.5, 222.0], [15.6, 222.0], [15.7, 222.0], [15.8, 222.0], [15.9, 222.0], [16.0, 222.0], [16.1, 222.0], [16.2, 225.0], [16.3, 225.0], [16.4, 225.0], [16.5, 225.0], [16.6, 225.0], [16.7, 225.0], [16.8, 225.0], [16.9, 225.0], [17.0, 234.0], [17.1, 234.0], [17.2, 234.0], [17.3, 234.0], [17.4, 234.0], [17.5, 234.0], [17.6, 234.0], [17.7, 245.0], [17.8, 245.0], [17.9, 245.0], [18.0, 245.0], [18.1, 245.0], [18.2, 245.0], [18.3, 245.0], [18.4, 246.0], [18.5, 246.0], [18.6, 246.0], [18.7, 246.0], [18.8, 246.0], [18.9, 246.0], [19.0, 246.0], [19.1, 246.0], [19.2, 262.0], [19.3, 262.0], [19.4, 262.0], [19.5, 262.0], [19.6, 262.0], [19.7, 262.0], [19.8, 262.0], [19.9, 262.0], [20.0, 262.0], [20.1, 262.0], [20.2, 262.0], [20.3, 262.0], [20.4, 262.0], [20.5, 262.0], [20.6, 264.0], [20.7, 264.0], [20.8, 264.0], [20.9, 264.0], [21.0, 264.0], [21.1, 264.0], [21.2, 264.0], [21.3, 264.0], [21.4, 266.0], [21.5, 266.0], [21.6, 266.0], [21.7, 266.0], [21.8, 266.0], [21.9, 266.0], [22.0, 266.0], [22.1, 286.0], [22.2, 286.0], [22.3, 286.0], [22.4, 286.0], [22.5, 286.0], [22.6, 286.0], [22.7, 286.0], [22.8, 318.0], [22.9, 318.0], [23.0, 318.0], [23.1, 318.0], [23.2, 318.0], [23.3, 318.0], [23.4, 318.0], [23.5, 318.0], [23.6, 320.0], [23.7, 320.0], [23.8, 320.0], [23.9, 320.0], [24.0, 320.0], [24.1, 320.0], [24.2, 320.0], [24.3, 322.0], [24.4, 322.0], [24.5, 322.0], [24.6, 322.0], [24.7, 322.0], [24.8, 322.0], [24.9, 322.0], [25.0, 359.0], [25.1, 359.0], [25.2, 359.0], [25.3, 359.0], [25.4, 359.0], [25.5, 359.0], [25.6, 359.0], [25.7, 359.0], [25.8, 383.0], [25.9, 383.0], [26.0, 383.0], [26.1, 383.0], [26.2, 383.0], [26.3, 383.0], [26.4, 383.0], [26.5, 386.0], [26.6, 386.0], [26.7, 386.0], [26.8, 386.0], [26.9, 386.0], [27.0, 386.0], [27.1, 386.0], [27.2, 386.0], [27.3, 409.0], [27.4, 409.0], [27.5, 409.0], [27.6, 409.0], [27.7, 409.0], [27.8, 409.0], [27.9, 409.0], [28.0, 410.0], [28.1, 410.0], [28.2, 410.0], [28.3, 410.0], [28.4, 410.0], [28.5, 410.0], [28.6, 410.0], [28.7, 410.0], [28.8, 410.0], [28.9, 410.0], [29.0, 410.0], [29.1, 410.0], [29.2, 410.0], [29.3, 410.0], [29.4, 410.0], [29.5, 434.0], [29.6, 434.0], [29.7, 434.0], [29.8, 434.0], [29.9, 434.0], [30.0, 434.0], [30.1, 434.0], [30.2, 448.0], [30.3, 448.0], [30.4, 448.0], [30.5, 448.0], [30.6, 448.0], [30.7, 448.0], [30.8, 448.0], [30.9, 455.0], [31.0, 455.0], [31.1, 455.0], [31.2, 455.0], [31.3, 455.0], [31.4, 455.0], [31.5, 455.0], [31.6, 455.0], [31.7, 459.0], [31.8, 459.0], [31.9, 459.0], [32.0, 459.0], [32.1, 459.0], [32.2, 459.0], [32.3, 459.0], [32.4, 512.0], [32.5, 512.0], [32.6, 512.0], [32.7, 512.0], [32.8, 512.0], [32.9, 512.0], [33.0, 512.0], [33.1, 531.0], [33.2, 531.0], [33.3, 531.0], [33.4, 531.0], [33.5, 531.0], [33.6, 531.0], [33.7, 531.0], [33.8, 531.0], [33.9, 562.0], [34.0, 562.0], [34.1, 562.0], [34.2, 562.0], [34.3, 562.0], [34.4, 562.0], [34.5, 562.0], [34.6, 566.0], [34.7, 566.0], [34.8, 566.0], [34.9, 566.0], [35.0, 566.0], [35.1, 566.0], [35.2, 566.0], [35.3, 573.0], [35.4, 573.0], [35.5, 573.0], [35.6, 573.0], [35.7, 573.0], [35.8, 573.0], [35.9, 573.0], [36.0, 573.0], [36.1, 574.0], [36.2, 574.0], [36.3, 574.0], [36.4, 574.0], [36.5, 574.0], [36.6, 574.0], [36.7, 574.0], [36.8, 585.0], [36.9, 585.0], [37.0, 585.0], [37.1, 585.0], [37.2, 585.0], [37.3, 585.0], [37.4, 585.0], [37.5, 592.0], [37.6, 592.0], [37.7, 592.0], [37.8, 592.0], [37.9, 592.0], [38.0, 592.0], [38.1, 592.0], [38.2, 592.0], [38.3, 602.0], [38.4, 602.0], [38.5, 602.0], [38.6, 602.0], [38.7, 602.0], [38.8, 602.0], [38.9, 602.0], [39.0, 612.0], [39.1, 612.0], [39.2, 612.0], [39.3, 612.0], [39.4, 612.0], [39.5, 612.0], [39.6, 612.0], [39.7, 612.0], [39.8, 616.0], [39.9, 616.0], [40.0, 616.0], [40.1, 616.0], [40.2, 616.0], [40.3, 616.0], [40.4, 616.0], [40.5, 623.0], [40.6, 623.0], [40.7, 623.0], [40.8, 623.0], [40.9, 623.0], [41.0, 623.0], [41.1, 623.0], [41.2, 662.0], [41.3, 662.0], [41.4, 662.0], [41.5, 662.0], [41.6, 662.0], [41.7, 662.0], [41.8, 662.0], [41.9, 662.0], [42.0, 664.0], [42.1, 664.0], [42.2, 664.0], [42.3, 664.0], [42.4, 664.0], [42.5, 664.0], [42.6, 664.0], [42.7, 677.0], [42.8, 677.0], [42.9, 677.0], [43.0, 677.0], [43.1, 677.0], [43.2, 677.0], [43.3, 677.0], [43.4, 732.0], [43.5, 732.0], [43.6, 732.0], [43.7, 732.0], [43.8, 732.0], [43.9, 732.0], [44.0, 732.0], [44.1, 732.0], [44.2, 735.0], [44.3, 735.0], [44.4, 735.0], [44.5, 735.0], [44.6, 735.0], [44.7, 735.0], [44.8, 735.0], [44.9, 737.0], [45.0, 737.0], [45.1, 737.0], [45.2, 737.0], [45.3, 737.0], [45.4, 737.0], [45.5, 737.0], [45.6, 739.0], [45.7, 739.0], [45.8, 739.0], [45.9, 739.0], [46.0, 739.0], [46.1, 739.0], [46.2, 739.0], [46.3, 739.0], [46.4, 745.0], [46.5, 745.0], [46.6, 745.0], [46.7, 745.0], [46.8, 745.0], [46.9, 745.0], [47.0, 745.0], [47.1, 753.0], [47.2, 753.0], [47.3, 753.0], [47.4, 753.0], [47.5, 753.0], [47.6, 753.0], [47.7, 753.0], [47.8, 766.0], [47.9, 766.0], [48.0, 766.0], [48.1, 766.0], [48.2, 766.0], [48.3, 766.0], [48.4, 766.0], [48.5, 766.0], [48.6, 774.0], [48.7, 774.0], [48.8, 774.0], [48.9, 774.0], [49.0, 774.0], [49.1, 774.0], [49.2, 774.0], [49.3, 774.0], [49.4, 774.0], [49.5, 774.0], [49.6, 774.0], [49.7, 774.0], [49.8, 774.0], [49.9, 774.0], [50.0, 776.0], [50.1, 776.0], [50.2, 776.0], [50.3, 776.0], [50.4, 776.0], [50.5, 776.0], [50.6, 776.0], [50.7, 776.0], [50.8, 817.0], [50.9, 817.0], [51.0, 817.0], [51.1, 817.0], [51.2, 817.0], [51.3, 817.0], [51.4, 817.0], [51.5, 823.0], [51.6, 823.0], [51.7, 823.0], [51.8, 823.0], [51.9, 823.0], [52.0, 823.0], [52.1, 823.0], [52.2, 823.0], [52.3, 865.0], [52.4, 865.0], [52.5, 865.0], [52.6, 865.0], [52.7, 865.0], [52.8, 865.0], [52.9, 865.0], [53.0, 874.0], [53.1, 874.0], [53.2, 874.0], [53.3, 874.0], [53.4, 874.0], [53.5, 874.0], [53.6, 874.0], [53.7, 915.0], [53.8, 915.0], [53.9, 915.0], [54.0, 915.0], [54.1, 915.0], [54.2, 915.0], [54.3, 915.0], [54.4, 915.0], [54.5, 923.0], [54.6, 923.0], [54.7, 923.0], [54.8, 923.0], [54.9, 923.0], [55.0, 923.0], [55.1, 923.0], [55.2, 954.0], [55.3, 954.0], [55.4, 954.0], [55.5, 954.0], [55.6, 954.0], [55.7, 954.0], [55.8, 954.0], [55.9, 957.0], [56.0, 957.0], [56.1, 957.0], [56.2, 957.0], [56.3, 957.0], [56.4, 957.0], [56.5, 957.0], [56.6, 957.0], [56.7, 959.0], [56.8, 959.0], [56.9, 959.0], [57.0, 959.0], [57.1, 959.0], [57.2, 959.0], [57.3, 959.0], [57.4, 968.0], [57.5, 968.0], [57.6, 968.0], [57.7, 968.0], [57.8, 968.0], [57.9, 968.0], [58.0, 968.0], [58.1, 974.0], [58.2, 974.0], [58.3, 974.0], [58.4, 974.0], [58.5, 974.0], [58.6, 974.0], [58.7, 974.0], [58.8, 974.0], [58.9, 1008.0], [59.0, 1008.0], [59.1, 1008.0], [59.2, 1008.0], [59.3, 1008.0], [59.4, 1008.0], [59.5, 1008.0], [59.6, 1010.0], [59.7, 1010.0], [59.8, 1010.0], [59.9, 1010.0], [60.0, 1010.0], [60.1, 1010.0], [60.2, 1010.0], [60.3, 1037.0], [60.4, 1037.0], [60.5, 1037.0], [60.6, 1037.0], [60.7, 1037.0], [60.8, 1037.0], [60.9, 1037.0], [61.0, 1037.0], [61.1, 1056.0], [61.2, 1056.0], [61.3, 1056.0], [61.4, 1056.0], [61.5, 1056.0], [61.6, 1056.0], [61.7, 1056.0], [61.8, 1059.0], [61.9, 1059.0], [62.0, 1059.0], [62.1, 1059.0], [62.2, 1059.0], [62.3, 1059.0], [62.4, 1059.0], [62.5, 1089.0], [62.6, 1089.0], [62.7, 1089.0], [62.8, 1089.0], [62.9, 1089.0], [63.0, 1089.0], [63.1, 1089.0], [63.2, 1089.0], [63.3, 1123.0], [63.4, 1123.0], [63.5, 1123.0], [63.6, 1123.0], [63.7, 1123.0], [63.8, 1123.0], [63.9, 1123.0], [64.0, 1181.0], [64.1, 1181.0], [64.2, 1181.0], [64.3, 1181.0], [64.4, 1181.0], [64.5, 1181.0], [64.6, 1181.0], [64.7, 1181.0], [64.8, 1189.0], [64.9, 1189.0], [65.0, 1189.0], [65.1, 1189.0], [65.2, 1189.0], [65.3, 1189.0], [65.4, 1189.0], [65.5, 1192.0], [65.6, 1192.0], [65.7, 1192.0], [65.8, 1192.0], [65.9, 1192.0], [66.0, 1192.0], [66.1, 1192.0], [66.2, 1193.0], [66.3, 1193.0], [66.4, 1193.0], [66.5, 1193.0], [66.6, 1193.0], [66.7, 1193.0], [66.8, 1193.0], [66.9, 1193.0], [67.0, 1229.0], [67.1, 1229.0], [67.2, 1229.0], [67.3, 1229.0], [67.4, 1229.0], [67.5, 1229.0], [67.6, 1229.0], [67.7, 1231.0], [67.8, 1231.0], [67.9, 1231.0], [68.0, 1231.0], [68.1, 1231.0], [68.2, 1231.0], [68.3, 1231.0], [68.4, 1268.0], [68.5, 1268.0], [68.6, 1268.0], [68.7, 1268.0], [68.8, 1268.0], [68.9, 1268.0], [69.0, 1268.0], [69.1, 1268.0], [69.2, 1271.0], [69.3, 1271.0], [69.4, 1271.0], [69.5, 1271.0], [69.6, 1271.0], [69.7, 1271.0], [69.8, 1271.0], [69.9, 1316.0], [70.0, 1316.0], [70.1, 1316.0], [70.2, 1316.0], [70.3, 1316.0], [70.4, 1316.0], [70.5, 1316.0], [70.6, 1333.0], [70.7, 1333.0], [70.8, 1333.0], [70.9, 1333.0], [71.0, 1333.0], [71.1, 1333.0], [71.2, 1333.0], [71.3, 1333.0], [71.4, 1348.0], [71.5, 1348.0], [71.6, 1348.0], [71.7, 1348.0], [71.8, 1348.0], [71.9, 1348.0], [72.0, 1348.0], [72.1, 1472.0], [72.2, 1472.0], [72.3, 1472.0], [72.4, 1472.0], [72.5, 1472.0], [72.6, 1472.0], [72.7, 1472.0], [72.8, 1474.0], [72.9, 1474.0], [73.0, 1474.0], [73.1, 1474.0], [73.2, 1474.0], [73.3, 1474.0], [73.4, 1474.0], [73.5, 1474.0], [73.6, 1518.0], [73.7, 1518.0], [73.8, 1518.0], [73.9, 1518.0], [74.0, 1518.0], [74.1, 1518.0], [74.2, 1518.0], [74.3, 1526.0], [74.4, 1526.0], [74.5, 1526.0], [74.6, 1526.0], [74.7, 1526.0], [74.8, 1526.0], [74.9, 1526.0], [75.0, 1547.0], [75.1, 1547.0], [75.2, 1547.0], [75.3, 1547.0], [75.4, 1547.0], [75.5, 1547.0], [75.6, 1547.0], [75.7, 1547.0], [75.8, 1570.0], [75.9, 1570.0], [76.0, 1570.0], [76.1, 1570.0], [76.2, 1570.0], [76.3, 1570.0], [76.4, 1570.0], [76.5, 1595.0], [76.6, 1595.0], [76.7, 1595.0], [76.8, 1595.0], [76.9, 1595.0], [77.0, 1595.0], [77.1, 1595.0], [77.2, 1595.0], [77.3, 1736.0], [77.4, 1736.0], [77.5, 1736.0], [77.6, 1736.0], [77.7, 1736.0], [77.8, 1736.0], [77.9, 1736.0], [78.0, 1805.0], [78.1, 1805.0], [78.2, 1805.0], [78.3, 1805.0], [78.4, 1805.0], [78.5, 1805.0], [78.6, 1805.0], [78.7, 1825.0], [78.8, 1825.0], [78.9, 1825.0], [79.0, 1825.0], [79.1, 1825.0], [79.2, 1825.0], [79.3, 1825.0], [79.4, 1825.0], [79.5, 1862.0], [79.6, 1862.0], [79.7, 1862.0], [79.8, 1862.0], [79.9, 1862.0], [80.0, 1862.0], [80.1, 1862.0], [80.2, 1927.0], [80.3, 1927.0], [80.4, 1927.0], [80.5, 1927.0], [80.6, 1927.0], [80.7, 1927.0], [80.8, 1927.0], [80.9, 1928.0], [81.0, 1928.0], [81.1, 1928.0], [81.2, 1928.0], [81.3, 1928.0], [81.4, 1928.0], [81.5, 1928.0], [81.6, 1928.0], [81.7, 1935.0], [81.8, 1935.0], [81.9, 1935.0], [82.0, 1935.0], [82.1, 1935.0], [82.2, 1935.0], [82.3, 1935.0], [82.4, 2054.0], [82.5, 2054.0], [82.6, 2054.0], [82.7, 2054.0], [82.8, 2054.0], [82.9, 2054.0], [83.0, 2054.0], [83.1, 2083.0], [83.2, 2083.0], [83.3, 2083.0], [83.4, 2083.0], [83.5, 2083.0], [83.6, 2083.0], [83.7, 2083.0], [83.8, 2083.0], [83.9, 2093.0], [84.0, 2093.0], [84.1, 2093.0], [84.2, 2093.0], [84.3, 2093.0], [84.4, 2093.0], [84.5, 2093.0], [84.6, 2141.0], [84.7, 2141.0], [84.8, 2141.0], [84.9, 2141.0], [85.0, 2141.0], [85.1, 2141.0], [85.2, 2141.0], [85.3, 2297.0], [85.4, 2297.0], [85.5, 2297.0], [85.6, 2297.0], [85.7, 2297.0], [85.8, 2297.0], [85.9, 2297.0], [86.0, 2297.0], [86.1, 2321.0], [86.2, 2321.0], [86.3, 2321.0], [86.4, 2321.0], [86.5, 2321.0], [86.6, 2321.0], [86.7, 2321.0], [86.8, 2405.0], [86.9, 2405.0], [87.0, 2405.0], [87.1, 2405.0], [87.2, 2405.0], [87.3, 2405.0], [87.4, 2405.0], [87.5, 2429.0], [87.6, 2429.0], [87.7, 2429.0], [87.8, 2429.0], [87.9, 2429.0], [88.0, 2429.0], [88.1, 2429.0], [88.2, 2429.0], [88.3, 2444.0], [88.4, 2444.0], [88.5, 2444.0], [88.6, 2444.0], [88.7, 2444.0], [88.8, 2444.0], [88.9, 2444.0], [89.0, 2448.0], [89.1, 2448.0], [89.2, 2448.0], [89.3, 2448.0], [89.4, 2448.0], [89.5, 2448.0], [89.6, 2448.0], [89.7, 2448.0], [89.8, 2546.0], [89.9, 2546.0], [90.0, 2546.0], [90.1, 2546.0], [90.2, 2546.0], [90.3, 2546.0], [90.4, 2546.0], [90.5, 2630.0], [90.6, 2630.0], [90.7, 2630.0], [90.8, 2630.0], [90.9, 2630.0], [91.0, 2630.0], [91.1, 2630.0], [91.2, 2671.0], [91.3, 2671.0], [91.4, 2671.0], [91.5, 2671.0], [91.6, 2671.0], [91.7, 2671.0], [91.8, 2671.0], [91.9, 2671.0], [92.0, 2691.0], [92.1, 2691.0], [92.2, 2691.0], [92.3, 2691.0], [92.4, 2691.0], [92.5, 2691.0], [92.6, 2691.0], [92.7, 2700.0], [92.8, 2700.0], [92.9, 2700.0], [93.0, 2700.0], [93.1, 2700.0], [93.2, 2700.0], [93.3, 2700.0], [93.4, 2749.0], [93.5, 2749.0], [93.6, 2749.0], [93.7, 2749.0], [93.8, 2749.0], [93.9, 2749.0], [94.0, 2749.0], [94.1, 2749.0], [94.2, 2798.0], [94.3, 2798.0], [94.4, 2798.0], [94.5, 2798.0], [94.6, 2798.0], [94.7, 2798.0], [94.8, 2798.0], [94.9, 2989.0], [95.0, 2989.0], [95.1, 2989.0], [95.2, 2989.0], [95.3, 2989.0], [95.4, 2989.0], [95.5, 2989.0], [95.6, 3089.0], [95.7, 3089.0], [95.8, 3089.0], [95.9, 3089.0], [96.0, 3089.0], [96.1, 3089.0], [96.2, 3089.0], [96.3, 3089.0], [96.4, 3256.0], [96.5, 3256.0], [96.6, 3256.0], [96.7, 3256.0], [96.8, 3256.0], [96.9, 3256.0], [97.0, 3256.0], [97.1, 3466.0], [97.2, 3466.0], [97.3, 3466.0], [97.4, 3466.0], [97.5, 3466.0], [97.6, 3466.0], [97.7, 3466.0], [97.8, 3752.0], [97.9, 3752.0], [98.0, 3752.0], [98.1, 3752.0], [98.2, 3752.0], [98.3, 3752.0], [98.4, 3752.0], [98.5, 3752.0], [98.6, 3842.0], [98.7, 3842.0], [98.8, 3842.0], [98.9, 3842.0], [99.0, 3842.0], [99.1, 3842.0], [99.2, 3842.0], [99.3, 4164.0], [99.4, 4164.0], [99.5, 4164.0], [99.6, 4164.0], [99.7, 4164.0], [99.8, 4164.0], [99.9, 4164.0]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[0.0, 544.0], [0.1, 544.0], [0.2, 544.0], [0.3, 544.0], [0.4, 544.0], [0.5, 544.0], [0.6, 544.0], [0.7, 546.0], [0.8, 546.0], [0.9, 546.0], [1.0, 546.0], [1.1, 546.0], [1.2, 546.0], [1.3, 546.0], [1.4, 548.0], [1.5, 548.0], [1.6, 548.0], [1.7, 548.0], [1.8, 548.0], [1.9, 548.0], [2.0, 552.0], [2.1, 552.0], [2.2, 552.0], [2.3, 552.0], [2.4, 552.0], [2.5, 552.0], [2.6, 552.0], [2.7, 552.0], [2.8, 552.0], [2.9, 552.0], [3.0, 552.0], [3.1, 552.0], [3.2, 552.0], [3.3, 552.0], [3.4, 553.0], [3.5, 553.0], [3.6, 553.0], [3.7, 553.0], [3.8, 553.0], [3.9, 553.0], [4.0, 553.0], [4.1, 553.0], [4.2, 553.0], [4.3, 553.0], [4.4, 553.0], [4.5, 553.0], [4.6, 553.0], [4.7, 556.0], [4.8, 556.0], [4.9, 556.0], [5.0, 556.0], [5.1, 556.0], [5.2, 556.0], [5.3, 557.0], [5.4, 557.0], [5.5, 557.0], [5.6, 557.0], [5.7, 557.0], [5.8, 557.0], [5.9, 557.0], [6.0, 563.0], [6.1, 563.0], [6.2, 563.0], [6.3, 563.0], [6.4, 563.0], [6.5, 563.0], [6.6, 563.0], [6.7, 564.0], [6.8, 564.0], [6.9, 564.0], [7.0, 564.0], [7.1, 564.0], [7.2, 564.0], [7.3, 564.0], [7.4, 564.0], [7.5, 564.0], [7.6, 564.0], [7.7, 564.0], [7.8, 564.0], [7.9, 564.0], [8.0, 566.0], [8.1, 566.0], [8.2, 566.0], [8.3, 566.0], [8.4, 566.0], [8.5, 566.0], [8.6, 566.0], [8.7, 583.0], [8.8, 583.0], [8.9, 583.0], [9.0, 583.0], [9.1, 583.0], [9.2, 583.0], [9.3, 593.0], [9.4, 593.0], [9.5, 593.0], [9.6, 593.0], [9.7, 593.0], [9.8, 593.0], [9.9, 593.0], [10.0, 594.0], [10.1, 594.0], [10.2, 594.0], [10.3, 594.0], [10.4, 594.0], [10.5, 594.0], [10.6, 630.0], [10.7, 630.0], [10.8, 630.0], [10.9, 630.0], [11.0, 630.0], [11.1, 630.0], [11.2, 630.0], [11.3, 631.0], [11.4, 631.0], [11.5, 631.0], [11.6, 631.0], [11.7, 631.0], [11.8, 631.0], [11.9, 631.0], [12.0, 642.0], [12.1, 642.0], [12.2, 642.0], [12.3, 642.0], [12.4, 642.0], [12.5, 642.0], [12.6, 644.0], [12.7, 644.0], [12.8, 644.0], [12.9, 644.0], [13.0, 644.0], [13.1, 644.0], [13.2, 644.0], [13.3, 653.0], [13.4, 653.0], [13.5, 653.0], [13.6, 653.0], [13.7, 653.0], [13.8, 653.0], [13.9, 653.0], [14.0, 664.0], [14.1, 664.0], [14.2, 664.0], [14.3, 664.0], [14.4, 664.0], [14.5, 664.0], [14.6, 672.0], [14.7, 672.0], [14.8, 672.0], [14.9, 672.0], [15.0, 672.0], [15.1, 672.0], [15.2, 672.0], [15.3, 672.0], [15.4, 672.0], [15.5, 672.0], [15.6, 672.0], [15.7, 672.0], [15.8, 672.0], [15.9, 673.0], [16.0, 673.0], [16.1, 673.0], [16.2, 673.0], [16.3, 673.0], [16.4, 673.0], [16.5, 673.0], [16.6, 677.0], [16.7, 677.0], [16.8, 677.0], [16.9, 677.0], [17.0, 677.0], [17.1, 677.0], [17.2, 677.0], [17.3, 678.0], [17.4, 678.0], [17.5, 678.0], [17.6, 678.0], [17.7, 678.0], [17.8, 678.0], [17.9, 691.0], [18.0, 691.0], [18.1, 691.0], [18.2, 691.0], [18.3, 691.0], [18.4, 691.0], [18.5, 691.0], [18.6, 699.0], [18.7, 699.0], [18.8, 699.0], [18.9, 699.0], [19.0, 699.0], [19.1, 699.0], [19.2, 699.0], [19.3, 700.0], [19.4, 700.0], [19.5, 700.0], [19.6, 700.0], [19.7, 700.0], [19.8, 700.0], [19.9, 706.0], [20.0, 706.0], [20.1, 706.0], [20.2, 706.0], [20.3, 706.0], [20.4, 706.0], [20.5, 706.0], [20.6, 726.0], [20.7, 726.0], [20.8, 726.0], [20.9, 726.0], [21.0, 726.0], [21.1, 726.0], [21.2, 728.0], [21.3, 728.0], [21.4, 728.0], [21.5, 728.0], [21.6, 728.0], [21.7, 728.0], [21.8, 728.0], [21.9, 729.0], [22.0, 729.0], [22.1, 729.0], [22.2, 729.0], [22.3, 729.0], [22.4, 729.0], [22.5, 729.0], [22.6, 740.0], [22.7, 740.0], [22.8, 740.0], [22.9, 740.0], [23.0, 740.0], [23.1, 740.0], [23.2, 749.0], [23.3, 749.0], [23.4, 749.0], [23.5, 749.0], [23.6, 749.0], [23.7, 749.0], [23.8, 749.0], [23.9, 749.0], [24.0, 749.0], [24.1, 749.0], [24.2, 749.0], [24.3, 749.0], [24.4, 749.0], [24.5, 749.0], [24.6, 758.0], [24.7, 758.0], [24.8, 758.0], [24.9, 758.0], [25.0, 758.0], [25.1, 758.0], [25.2, 772.0], [25.3, 772.0], [25.4, 772.0], [25.5, 772.0], [25.6, 772.0], [25.7, 772.0], [25.8, 772.0], [25.9, 787.0], [26.0, 787.0], [26.1, 787.0], [26.2, 787.0], [26.3, 787.0], [26.4, 787.0], [26.5, 791.0], [26.6, 791.0], [26.7, 791.0], [26.8, 791.0], [26.9, 791.0], [27.0, 791.0], [27.1, 791.0], [27.2, 809.0], [27.3, 809.0], [27.4, 809.0], [27.5, 809.0], [27.6, 809.0], [27.7, 809.0], [27.8, 809.0], [27.9, 825.0], [28.0, 825.0], [28.1, 825.0], [28.2, 825.0], [28.3, 825.0], [28.4, 825.0], [28.5, 854.0], [28.6, 854.0], [28.7, 854.0], [28.8, 854.0], [28.9, 854.0], [29.0, 854.0], [29.1, 854.0], [29.2, 855.0], [29.3, 855.0], [29.4, 855.0], [29.5, 855.0], [29.6, 855.0], [29.7, 855.0], [29.8, 855.0], [29.9, 858.0], [30.0, 858.0], [30.1, 858.0], [30.2, 858.0], [30.3, 858.0], [30.4, 858.0], [30.5, 860.0], [30.6, 860.0], [30.7, 860.0], [30.8, 860.0], [30.9, 860.0], [31.0, 860.0], [31.1, 860.0], [31.2, 860.0], [31.3, 860.0], [31.4, 860.0], [31.5, 860.0], [31.6, 860.0], [31.7, 860.0], [31.8, 875.0], [31.9, 875.0], [32.0, 875.0], [32.1, 875.0], [32.2, 875.0], [32.3, 875.0], [32.4, 875.0], [32.5, 876.0], [32.6, 876.0], [32.7, 876.0], [32.8, 876.0], [32.9, 876.0], [33.0, 876.0], [33.1, 876.0], [33.2, 881.0], [33.3, 881.0], [33.4, 881.0], [33.5, 881.0], [33.6, 881.0], [33.7, 881.0], [33.8, 905.0], [33.9, 905.0], [34.0, 905.0], [34.1, 905.0], [34.2, 905.0], [34.3, 905.0], [34.4, 905.0], [34.5, 906.0], [34.6, 906.0], [34.7, 906.0], [34.8, 906.0], [34.9, 906.0], [35.0, 906.0], [35.1, 917.0], [35.2, 917.0], [35.3, 917.0], [35.4, 917.0], [35.5, 917.0], [35.6, 917.0], [35.7, 917.0], [35.8, 919.0], [35.9, 919.0], [36.0, 919.0], [36.1, 919.0], [36.2, 919.0], [36.3, 919.0], [36.4, 919.0], [36.5, 940.0], [36.6, 940.0], [36.7, 940.0], [36.8, 940.0], [36.9, 940.0], [37.0, 940.0], [37.1, 992.0], [37.2, 992.0], [37.3, 992.0], [37.4, 992.0], [37.5, 992.0], [37.6, 992.0], [37.7, 992.0], [37.8, 999.0], [37.9, 999.0], [38.0, 999.0], [38.1, 999.0], [38.2, 999.0], [38.3, 999.0], [38.4, 999.0], [38.5, 1009.0], [38.6, 1009.0], [38.7, 1009.0], [38.8, 1009.0], [38.9, 1009.0], [39.0, 1009.0], [39.1, 1082.0], [39.2, 1082.0], [39.3, 1082.0], [39.4, 1082.0], [39.5, 1082.0], [39.6, 1082.0], [39.7, 1082.0], [39.8, 1104.0], [39.9, 1104.0], [40.0, 1104.0], [40.1, 1104.0], [40.2, 1104.0], [40.3, 1104.0], [40.4, 1104.0], [40.5, 1104.0], [40.6, 1104.0], [40.7, 1104.0], [40.8, 1104.0], [40.9, 1104.0], [41.0, 1104.0], [41.1, 1143.0], [41.2, 1143.0], [41.3, 1143.0], [41.4, 1143.0], [41.5, 1143.0], [41.6, 1143.0], [41.7, 1143.0], [41.8, 1176.0], [41.9, 1176.0], [42.0, 1176.0], [42.1, 1176.0], [42.2, 1176.0], [42.3, 1176.0], [42.4, 1180.0], [42.5, 1180.0], [42.6, 1180.0], [42.7, 1180.0], [42.8, 1180.0], [42.9, 1180.0], [43.0, 1180.0], [43.1, 1183.0], [43.2, 1183.0], [43.3, 1183.0], [43.4, 1183.0], [43.5, 1183.0], [43.6, 1183.0], [43.7, 1183.0], [43.8, 1213.0], [43.9, 1213.0], [44.0, 1213.0], [44.1, 1213.0], [44.2, 1213.0], [44.3, 1213.0], [44.4, 1218.0], [44.5, 1218.0], [44.6, 1218.0], [44.7, 1218.0], [44.8, 1218.0], [44.9, 1218.0], [45.0, 1218.0], [45.1, 1248.0], [45.2, 1248.0], [45.3, 1248.0], [45.4, 1248.0], [45.5, 1248.0], [45.6, 1248.0], [45.7, 1265.0], [45.8, 1265.0], [45.9, 1265.0], [46.0, 1265.0], [46.1, 1265.0], [46.2, 1265.0], [46.3, 1265.0], [46.4, 1278.0], [46.5, 1278.0], [46.6, 1278.0], [46.7, 1278.0], [46.8, 1278.0], [46.9, 1278.0], [47.0, 1278.0], [47.1, 1302.0], [47.2, 1302.0], [47.3, 1302.0], [47.4, 1302.0], [47.5, 1302.0], [47.6, 1302.0], [47.7, 1341.0], [47.8, 1341.0], [47.9, 1341.0], [48.0, 1341.0], [48.1, 1341.0], [48.2, 1341.0], [48.3, 1341.0], [48.4, 1352.0], [48.5, 1352.0], [48.6, 1352.0], [48.7, 1352.0], [48.8, 1352.0], [48.9, 1352.0], [49.0, 1352.0], [49.1, 1360.0], [49.2, 1360.0], [49.3, 1360.0], [49.4, 1360.0], [49.5, 1360.0], [49.6, 1360.0], [49.7, 1367.0], [49.8, 1367.0], [49.9, 1367.0], [50.0, 1367.0], [50.1, 1367.0], [50.2, 1367.0], [50.3, 1367.0], [50.4, 1391.0], [50.5, 1391.0], [50.6, 1391.0], [50.7, 1391.0], [50.8, 1391.0], [50.9, 1391.0], [51.0, 1436.0], [51.1, 1436.0], [51.2, 1436.0], [51.3, 1436.0], [51.4, 1436.0], [51.5, 1436.0], [51.6, 1436.0], [51.7, 1452.0], [51.8, 1452.0], [51.9, 1452.0], [52.0, 1452.0], [52.1, 1452.0], [52.2, 1452.0], [52.3, 1452.0], [52.4, 1465.0], [52.5, 1465.0], [52.6, 1465.0], [52.7, 1465.0], [52.8, 1465.0], [52.9, 1465.0], [53.0, 1481.0], [53.1, 1481.0], [53.2, 1481.0], [53.3, 1481.0], [53.4, 1481.0], [53.5, 1481.0], [53.6, 1481.0], [53.7, 1502.0], [53.8, 1502.0], [53.9, 1502.0], [54.0, 1502.0], [54.1, 1502.0], [54.2, 1502.0], [54.3, 1502.0], [54.4, 1518.0], [54.5, 1518.0], [54.6, 1518.0], [54.7, 1518.0], [54.8, 1518.0], [54.9, 1518.0], [55.0, 1529.0], [55.1, 1529.0], [55.2, 1529.0], [55.3, 1529.0], [55.4, 1529.0], [55.5, 1529.0], [55.6, 1529.0], [55.7, 1538.0], [55.8, 1538.0], [55.9, 1538.0], [56.0, 1538.0], [56.1, 1538.0], [56.2, 1538.0], [56.3, 1554.0], [56.4, 1554.0], [56.5, 1554.0], [56.6, 1554.0], [56.7, 1554.0], [56.8, 1554.0], [56.9, 1554.0], [57.0, 1559.0], [57.1, 1559.0], [57.2, 1559.0], [57.3, 1559.0], [57.4, 1559.0], [57.5, 1559.0], [57.6, 1559.0], [57.7, 1585.0], [57.8, 1585.0], [57.9, 1585.0], [58.0, 1585.0], [58.1, 1585.0], [58.2, 1585.0], [58.3, 1592.0], [58.4, 1592.0], [58.5, 1592.0], [58.6, 1592.0], [58.7, 1592.0], [58.8, 1592.0], [58.9, 1592.0], [59.0, 1610.0], [59.1, 1610.0], [59.2, 1610.0], [59.3, 1610.0], [59.4, 1610.0], [59.5, 1610.0], [59.6, 1610.0], [59.7, 1638.0], [59.8, 1638.0], [59.9, 1638.0], [60.0, 1638.0], [60.1, 1638.0], [60.2, 1638.0], [60.3, 1653.0], [60.4, 1653.0], [60.5, 1653.0], [60.6, 1653.0], [60.7, 1653.0], [60.8, 1653.0], [60.9, 1653.0], [61.0, 1662.0], [61.1, 1662.0], [61.2, 1662.0], [61.3, 1662.0], [61.4, 1662.0], [61.5, 1662.0], [61.6, 1669.0], [61.7, 1669.0], [61.8, 1669.0], [61.9, 1669.0], [62.0, 1669.0], [62.1, 1669.0], [62.2, 1669.0], [62.3, 1703.0], [62.4, 1703.0], [62.5, 1703.0], [62.6, 1703.0], [62.7, 1703.0], [62.8, 1703.0], [62.9, 1703.0], [63.0, 1706.0], [63.1, 1706.0], [63.2, 1706.0], [63.3, 1706.0], [63.4, 1706.0], [63.5, 1706.0], [63.6, 1717.0], [63.7, 1717.0], [63.8, 1717.0], [63.9, 1717.0], [64.0, 1717.0], [64.1, 1717.0], [64.2, 1717.0], [64.3, 1770.0], [64.4, 1770.0], [64.5, 1770.0], [64.6, 1770.0], [64.7, 1770.0], [64.8, 1770.0], [64.9, 1770.0], [65.0, 1790.0], [65.1, 1790.0], [65.2, 1790.0], [65.3, 1790.0], [65.4, 1790.0], [65.5, 1790.0], [65.6, 1844.0], [65.7, 1844.0], [65.8, 1844.0], [65.9, 1844.0], [66.0, 1844.0], [66.1, 1844.0], [66.2, 1844.0], [66.3, 1863.0], [66.4, 1863.0], [66.5, 1863.0], [66.6, 1863.0], [66.7, 1863.0], [66.8, 1863.0], [66.9, 1876.0], [67.0, 1876.0], [67.1, 1876.0], [67.2, 1876.0], [67.3, 1876.0], [67.4, 1876.0], [67.5, 1876.0], [67.6, 1877.0], [67.7, 1877.0], [67.8, 1877.0], [67.9, 1877.0], [68.0, 1877.0], [68.1, 1877.0], [68.2, 1877.0], [68.3, 1879.0], [68.4, 1879.0], [68.5, 1879.0], [68.6, 1879.0], [68.7, 1879.0], [68.8, 1879.0], [68.9, 1904.0], [69.0, 1904.0], [69.1, 1904.0], [69.2, 1904.0], [69.3, 1904.0], [69.4, 1904.0], [69.5, 1904.0], [69.6, 1940.0], [69.7, 1940.0], [69.8, 1940.0], [69.9, 1940.0], [70.0, 1940.0], [70.1, 1940.0], [70.2, 1975.0], [70.3, 1975.0], [70.4, 1975.0], [70.5, 1975.0], [70.6, 1975.0], [70.7, 1975.0], [70.8, 1975.0], [70.9, 1978.0], [71.0, 1978.0], [71.1, 1978.0], [71.2, 1978.0], [71.3, 1978.0], [71.4, 1978.0], [71.5, 1978.0], [71.6, 1983.0], [71.7, 1983.0], [71.8, 1983.0], [71.9, 1983.0], [72.0, 1983.0], [72.1, 1983.0], [72.2, 2055.0], [72.3, 2055.0], [72.4, 2055.0], [72.5, 2055.0], [72.6, 2055.0], [72.7, 2055.0], [72.8, 2055.0], [72.9, 2103.0], [73.0, 2103.0], [73.1, 2103.0], [73.2, 2103.0], [73.3, 2103.0], [73.4, 2103.0], [73.5, 2103.0], [73.6, 2107.0], [73.7, 2107.0], [73.8, 2107.0], [73.9, 2107.0], [74.0, 2107.0], [74.1, 2107.0], [74.2, 2114.0], [74.3, 2114.0], [74.4, 2114.0], [74.5, 2114.0], [74.6, 2114.0], [74.7, 2114.0], [74.8, 2114.0], [74.9, 2143.0], [75.0, 2143.0], [75.1, 2143.0], [75.2, 2143.0], [75.3, 2143.0], [75.4, 2143.0], [75.5, 2175.0], [75.6, 2175.0], [75.7, 2175.0], [75.8, 2175.0], [75.9, 2175.0], [76.0, 2175.0], [76.1, 2175.0], [76.2, 2187.0], [76.3, 2187.0], [76.4, 2187.0], [76.5, 2187.0], [76.6, 2187.0], [76.7, 2187.0], [76.8, 2187.0], [76.9, 2202.0], [77.0, 2202.0], [77.1, 2202.0], [77.2, 2202.0], [77.3, 2202.0], [77.4, 2202.0], [77.5, 2217.0], [77.6, 2217.0], [77.7, 2217.0], [77.8, 2217.0], [77.9, 2217.0], [78.0, 2217.0], [78.1, 2217.0], [78.2, 2265.0], [78.3, 2265.0], [78.4, 2265.0], [78.5, 2265.0], [78.6, 2265.0], [78.7, 2265.0], [78.8, 2265.0], [78.9, 2270.0], [79.0, 2270.0], [79.1, 2270.0], [79.2, 2270.0], [79.3, 2270.0], [79.4, 2270.0], [79.5, 2309.0], [79.6, 2309.0], [79.7, 2309.0], [79.8, 2309.0], [79.9, 2309.0], [80.0, 2309.0], [80.1, 2309.0], [80.2, 2311.0], [80.3, 2311.0], [80.4, 2311.0], [80.5, 2311.0], [80.6, 2311.0], [80.7, 2311.0], [80.8, 2311.0], [80.9, 2311.0], [81.0, 2311.0], [81.1, 2311.0], [81.2, 2311.0], [81.3, 2311.0], [81.4, 2311.0], [81.5, 2343.0], [81.6, 2343.0], [81.7, 2343.0], [81.8, 2343.0], [81.9, 2343.0], [82.0, 2343.0], [82.1, 2343.0], [82.2, 2346.0], [82.3, 2346.0], [82.4, 2346.0], [82.5, 2346.0], [82.6, 2346.0], [82.7, 2346.0], [82.8, 2359.0], [82.9, 2359.0], [83.0, 2359.0], [83.1, 2359.0], [83.2, 2359.0], [83.3, 2359.0], [83.4, 2359.0], [83.5, 2381.0], [83.6, 2381.0], [83.7, 2381.0], [83.8, 2381.0], [83.9, 2381.0], [84.0, 2381.0], [84.1, 2381.0], [84.2, 2451.0], [84.3, 2451.0], [84.4, 2451.0], [84.5, 2451.0], [84.6, 2451.0], [84.7, 2451.0], [84.8, 2484.0], [84.9, 2484.0], [85.0, 2484.0], [85.1, 2484.0], [85.2, 2484.0], [85.3, 2484.0], [85.4, 2484.0], [85.5, 2499.0], [85.6, 2499.0], [85.7, 2499.0], [85.8, 2499.0], [85.9, 2499.0], [86.0, 2499.0], [86.1, 2538.0], [86.2, 2538.0], [86.3, 2538.0], [86.4, 2538.0], [86.5, 2538.0], [86.6, 2538.0], [86.7, 2538.0], [86.8, 2666.0], [86.9, 2666.0], [87.0, 2666.0], [87.1, 2666.0], [87.2, 2666.0], [87.3, 2666.0], [87.4, 2666.0], [87.5, 2737.0], [87.6, 2737.0], [87.7, 2737.0], [87.8, 2737.0], [87.9, 2737.0], [88.0, 2737.0], [88.1, 2798.0], [88.2, 2798.0], [88.3, 2798.0], [88.4, 2798.0], [88.5, 2798.0], [88.6, 2798.0], [88.7, 2798.0], [88.8, 2799.0], [88.9, 2799.0], [89.0, 2799.0], [89.1, 2799.0], [89.2, 2799.0], [89.3, 2799.0], [89.4, 2799.0], [89.5, 2935.0], [89.6, 2935.0], [89.7, 2935.0], [89.8, 2935.0], [89.9, 2935.0], [90.0, 2935.0], [90.1, 2999.0], [90.2, 2999.0], [90.3, 2999.0], [90.4, 2999.0], [90.5, 2999.0], [90.6, 2999.0], [90.7, 2999.0], [90.8, 3019.0], [90.9, 3019.0], [91.0, 3019.0], [91.1, 3019.0], [91.2, 3019.0], [91.3, 3019.0], [91.4, 3054.0], [91.5, 3054.0], [91.6, 3054.0], [91.7, 3054.0], [91.8, 3054.0], [91.9, 3054.0], [92.0, 3054.0], [92.1, 3081.0], [92.2, 3081.0], [92.3, 3081.0], [92.4, 3081.0], [92.5, 3081.0], [92.6, 3081.0], [92.7, 3081.0], [92.8, 3144.0], [92.9, 3144.0], [93.0, 3144.0], [93.1, 3144.0], [93.2, 3144.0], [93.3, 3144.0], [93.4, 3427.0], [93.5, 3427.0], [93.6, 3427.0], [93.7, 3427.0], [93.8, 3427.0], [93.9, 3427.0], [94.0, 3427.0], [94.1, 3619.0], [94.2, 3619.0], [94.3, 3619.0], [94.4, 3619.0], [94.5, 3619.0], [94.6, 3619.0], [94.7, 3619.0], [94.8, 3806.0], [94.9, 3806.0], [95.0, 3806.0], [95.1, 3806.0], [95.2, 3806.0], [95.3, 3806.0], [95.4, 3839.0], [95.5, 3839.0], [95.6, 3839.0], [95.7, 3839.0], [95.8, 3839.0], [95.9, 3839.0], [96.0, 3839.0], [96.1, 3895.0], [96.2, 3895.0], [96.3, 3895.0], [96.4, 3895.0], [96.5, 3895.0], [96.6, 3895.0], [96.7, 3910.0], [96.8, 3910.0], [96.9, 3910.0], [97.0, 3910.0], [97.1, 3910.0], [97.2, 3910.0], [97.3, 3910.0], [97.4, 4524.0], [97.5, 4524.0], [97.6, 4524.0], [97.7, 4524.0], [97.8, 4524.0], [97.9, 4524.0], [98.0, 4524.0], [98.1, 4902.0], [98.2, 4902.0], [98.3, 4902.0], [98.4, 4902.0], [98.5, 4902.0], [98.6, 4902.0], [98.7, 5041.0], [98.8, 5041.0], [98.9, 5041.0], [99.0, 5041.0], [99.1, 5041.0], [99.2, 5041.0], [99.3, 5041.0], [99.4, 5190.0], [99.5, 5190.0], [99.6, 5190.0], [99.7, 5190.0], [99.8, 5190.0], [99.9, 5190.0]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[0.0, 135.0], [0.1, 135.0], [0.2, 135.0], [0.3, 135.0], [0.4, 135.0], [0.5, 135.0], [0.6, 135.0], [0.7, 135.0], [0.8, 136.0], [0.9, 136.0], [1.0, 136.0], [1.1, 136.0], [1.2, 136.0], [1.3, 136.0], [1.4, 136.0], [1.5, 136.0], [1.6, 137.0], [1.7, 137.0], [1.8, 137.0], [1.9, 137.0], [2.0, 137.0], [2.1, 137.0], [2.2, 137.0], [2.3, 137.0], [2.4, 137.0], [2.5, 137.0], [2.6, 137.0], [2.7, 137.0], [2.8, 137.0], [2.9, 137.0], [3.0, 137.0], [3.1, 137.0], [3.2, 140.0], [3.3, 140.0], [3.4, 140.0], [3.5, 140.0], [3.6, 140.0], [3.7, 140.0], [3.8, 140.0], [3.9, 140.0], [4.0, 146.0], [4.1, 146.0], [4.2, 146.0], [4.3, 146.0], [4.4, 146.0], [4.5, 146.0], [4.6, 146.0], [4.7, 146.0], [4.8, 147.0], [4.9, 147.0], [5.0, 147.0], [5.1, 147.0], [5.2, 147.0], [5.3, 147.0], [5.4, 147.0], [5.5, 147.0], [5.6, 150.0], [5.7, 150.0], [5.8, 150.0], [5.9, 150.0], [6.0, 150.0], [6.1, 150.0], [6.2, 150.0], [6.3, 150.0], [6.4, 155.0], [6.5, 155.0], [6.6, 155.0], [6.7, 155.0], [6.8, 155.0], [6.9, 155.0], [7.0, 155.0], [7.1, 155.0], [7.2, 158.0], [7.3, 158.0], [7.4, 158.0], [7.5, 158.0], [7.6, 158.0], [7.7, 158.0], [7.8, 158.0], [7.9, 158.0], [8.0, 168.0], [8.1, 168.0], [8.2, 168.0], [8.3, 168.0], [8.4, 168.0], [8.5, 168.0], [8.6, 168.0], [8.7, 168.0], [8.8, 170.0], [8.9, 170.0], [9.0, 170.0], [9.1, 170.0], [9.2, 170.0], [9.3, 170.0], [9.4, 170.0], [9.5, 170.0], [9.6, 173.0], [9.7, 173.0], [9.8, 173.0], [9.9, 173.0], [10.0, 173.0], [10.1, 173.0], [10.2, 173.0], [10.3, 173.0], [10.4, 174.0], [10.5, 174.0], [10.6, 174.0], [10.7, 174.0], [10.8, 174.0], [10.9, 174.0], [11.0, 174.0], [11.1, 174.0], [11.2, 179.0], [11.3, 179.0], [11.4, 179.0], [11.5, 179.0], [11.6, 179.0], [11.7, 179.0], [11.8, 179.0], [11.9, 179.0], [12.0, 189.0], [12.1, 189.0], [12.2, 189.0], [12.3, 189.0], [12.4, 189.0], [12.5, 189.0], [12.6, 189.0], [12.7, 190.0], [12.8, 190.0], [12.9, 190.0], [13.0, 190.0], [13.1, 190.0], [13.2, 190.0], [13.3, 190.0], [13.4, 190.0], [13.5, 199.0], [13.6, 199.0], [13.7, 199.0], [13.8, 199.0], [13.9, 199.0], [14.0, 199.0], [14.1, 199.0], [14.2, 199.0], [14.3, 206.0], [14.4, 206.0], [14.5, 206.0], [14.6, 206.0], [14.7, 206.0], [14.8, 206.0], [14.9, 206.0], [15.0, 206.0], [15.1, 208.0], [15.2, 208.0], [15.3, 208.0], [15.4, 208.0], [15.5, 208.0], [15.6, 208.0], [15.7, 208.0], [15.8, 208.0], [15.9, 210.0], [16.0, 210.0], [16.1, 210.0], [16.2, 210.0], [16.3, 210.0], [16.4, 210.0], [16.5, 210.0], [16.6, 210.0], [16.7, 211.0], [16.8, 211.0], [16.9, 211.0], [17.0, 211.0], [17.1, 211.0], [17.2, 211.0], [17.3, 211.0], [17.4, 211.0], [17.5, 211.0], [17.6, 211.0], [17.7, 211.0], [17.8, 211.0], [17.9, 211.0], [18.0, 211.0], [18.1, 211.0], [18.2, 211.0], [18.3, 211.0], [18.4, 211.0], [18.5, 211.0], [18.6, 211.0], [18.7, 211.0], [18.8, 211.0], [18.9, 211.0], [19.0, 211.0], [19.1, 212.0], [19.2, 212.0], [19.3, 212.0], [19.4, 212.0], [19.5, 212.0], [19.6, 212.0], [19.7, 212.0], [19.8, 212.0], [19.9, 246.0], [20.0, 246.0], [20.1, 246.0], [20.2, 246.0], [20.3, 246.0], [20.4, 246.0], [20.5, 246.0], [20.6, 246.0], [20.7, 257.0], [20.8, 257.0], [20.9, 257.0], [21.0, 257.0], [21.1, 257.0], [21.2, 257.0], [21.3, 257.0], [21.4, 257.0], [21.5, 272.0], [21.6, 272.0], [21.7, 272.0], [21.8, 272.0], [21.9, 272.0], [22.0, 272.0], [22.1, 272.0], [22.2, 272.0], [22.3, 275.0], [22.4, 275.0], [22.5, 275.0], [22.6, 275.0], [22.7, 275.0], [22.8, 275.0], [22.9, 275.0], [23.0, 275.0], [23.1, 285.0], [23.2, 285.0], [23.3, 285.0], [23.4, 285.0], [23.5, 285.0], [23.6, 285.0], [23.7, 285.0], [23.8, 285.0], [23.9, 292.0], [24.0, 292.0], [24.1, 292.0], [24.2, 292.0], [24.3, 292.0], [24.4, 292.0], [24.5, 292.0], [24.6, 292.0], [24.7, 302.0], [24.8, 302.0], [24.9, 302.0], [25.0, 302.0], [25.1, 302.0], [25.2, 302.0], [25.3, 302.0], [25.4, 303.0], [25.5, 303.0], [25.6, 303.0], [25.7, 303.0], [25.8, 303.0], [25.9, 303.0], [26.0, 303.0], [26.1, 303.0], [26.2, 323.0], [26.3, 323.0], [26.4, 323.0], [26.5, 323.0], [26.6, 323.0], [26.7, 323.0], [26.8, 323.0], [26.9, 323.0], [27.0, 335.0], [27.1, 335.0], [27.2, 335.0], [27.3, 335.0], [27.4, 335.0], [27.5, 335.0], [27.6, 335.0], [27.7, 335.0], [27.8, 341.0], [27.9, 341.0], [28.0, 341.0], [28.1, 341.0], [28.2, 341.0], [28.3, 341.0], [28.4, 341.0], [28.5, 341.0], [28.6, 352.0], [28.7, 352.0], [28.8, 352.0], [28.9, 352.0], [29.0, 352.0], [29.1, 352.0], [29.2, 352.0], [29.3, 352.0], [29.4, 354.0], [29.5, 354.0], [29.6, 354.0], [29.7, 354.0], [29.8, 354.0], [29.9, 354.0], [30.0, 354.0], [30.1, 354.0], [30.2, 357.0], [30.3, 357.0], [30.4, 357.0], [30.5, 357.0], [30.6, 357.0], [30.7, 357.0], [30.8, 357.0], [30.9, 357.0], [31.0, 379.0], [31.1, 379.0], [31.2, 379.0], [31.3, 379.0], [31.4, 379.0], [31.5, 379.0], [31.6, 379.0], [31.7, 379.0], [31.8, 381.0], [31.9, 381.0], [32.0, 381.0], [32.1, 381.0], [32.2, 381.0], [32.3, 381.0], [32.4, 381.0], [32.5, 381.0], [32.6, 389.0], [32.7, 389.0], [32.8, 389.0], [32.9, 389.0], [33.0, 389.0], [33.1, 389.0], [33.2, 389.0], [33.3, 389.0], [33.4, 393.0], [33.5, 393.0], [33.6, 393.0], [33.7, 393.0], [33.8, 393.0], [33.9, 393.0], [34.0, 393.0], [34.1, 393.0], [34.2, 408.0], [34.3, 408.0], [34.4, 408.0], [34.5, 408.0], [34.6, 408.0], [34.7, 408.0], [34.8, 408.0], [34.9, 408.0], [35.0, 422.0], [35.1, 422.0], [35.2, 422.0], [35.3, 422.0], [35.4, 422.0], [35.5, 422.0], [35.6, 422.0], [35.7, 422.0], [35.8, 444.0], [35.9, 444.0], [36.0, 444.0], [36.1, 444.0], [36.2, 444.0], [36.3, 444.0], [36.4, 444.0], [36.5, 444.0], [36.6, 448.0], [36.7, 448.0], [36.8, 448.0], [36.9, 448.0], [37.0, 448.0], [37.1, 448.0], [37.2, 448.0], [37.3, 448.0], [37.4, 460.0], [37.5, 460.0], [37.6, 460.0], [37.7, 460.0], [37.8, 460.0], [37.9, 460.0], [38.0, 460.0], [38.1, 463.0], [38.2, 463.0], [38.3, 463.0], [38.4, 463.0], [38.5, 463.0], [38.6, 463.0], [38.7, 463.0], [38.8, 463.0], [38.9, 471.0], [39.0, 471.0], [39.1, 471.0], [39.2, 471.0], [39.3, 471.0], [39.4, 471.0], [39.5, 471.0], [39.6, 471.0], [39.7, 489.0], [39.8, 489.0], [39.9, 489.0], [40.0, 489.0], [40.1, 489.0], [40.2, 489.0], [40.3, 489.0], [40.4, 489.0], [40.5, 495.0], [40.6, 495.0], [40.7, 495.0], [40.8, 495.0], [40.9, 495.0], [41.0, 495.0], [41.1, 495.0], [41.2, 495.0], [41.3, 501.0], [41.4, 501.0], [41.5, 501.0], [41.6, 501.0], [41.7, 501.0], [41.8, 501.0], [41.9, 501.0], [42.0, 501.0], [42.1, 503.0], [42.2, 503.0], [42.3, 503.0], [42.4, 503.0], [42.5, 503.0], [42.6, 503.0], [42.7, 503.0], [42.8, 503.0], [42.9, 511.0], [43.0, 511.0], [43.1, 511.0], [43.2, 511.0], [43.3, 511.0], [43.4, 511.0], [43.5, 511.0], [43.6, 511.0], [43.7, 539.0], [43.8, 539.0], [43.9, 539.0], [44.0, 539.0], [44.1, 539.0], [44.2, 539.0], [44.3, 539.0], [44.4, 539.0], [44.5, 553.0], [44.6, 553.0], [44.7, 553.0], [44.8, 553.0], [44.9, 553.0], [45.0, 553.0], [45.1, 553.0], [45.2, 553.0], [45.3, 567.0], [45.4, 567.0], [45.5, 567.0], [45.6, 567.0], [45.7, 567.0], [45.8, 567.0], [45.9, 567.0], [46.0, 567.0], [46.1, 589.0], [46.2, 589.0], [46.3, 589.0], [46.4, 589.0], [46.5, 589.0], [46.6, 589.0], [46.7, 589.0], [46.8, 589.0], [46.9, 608.0], [47.0, 608.0], [47.1, 608.0], [47.2, 608.0], [47.3, 608.0], [47.4, 608.0], [47.5, 608.0], [47.6, 608.0], [47.7, 619.0], [47.8, 619.0], [47.9, 619.0], [48.0, 619.0], [48.1, 619.0], [48.2, 619.0], [48.3, 619.0], [48.4, 619.0], [48.5, 654.0], [48.6, 654.0], [48.7, 654.0], [48.8, 654.0], [48.9, 654.0], [49.0, 654.0], [49.1, 654.0], [49.2, 654.0], [49.3, 669.0], [49.4, 669.0], [49.5, 669.0], [49.6, 669.0], [49.7, 669.0], [49.8, 669.0], [49.9, 669.0], [50.0, 685.0], [50.1, 685.0], [50.2, 685.0], [50.3, 685.0], [50.4, 685.0], [50.5, 685.0], [50.6, 685.0], [50.7, 685.0], [50.8, 735.0], [50.9, 735.0], [51.0, 735.0], [51.1, 735.0], [51.2, 735.0], [51.3, 735.0], [51.4, 735.0], [51.5, 735.0], [51.6, 737.0], [51.7, 737.0], [51.8, 737.0], [51.9, 737.0], [52.0, 737.0], [52.1, 737.0], [52.2, 737.0], [52.3, 737.0], [52.4, 738.0], [52.5, 738.0], [52.6, 738.0], [52.7, 738.0], [52.8, 738.0], [52.9, 738.0], [53.0, 738.0], [53.1, 738.0], [53.2, 765.0], [53.3, 765.0], [53.4, 765.0], [53.5, 765.0], [53.6, 765.0], [53.7, 765.0], [53.8, 765.0], [53.9, 765.0], [54.0, 785.0], [54.1, 785.0], [54.2, 785.0], [54.3, 785.0], [54.4, 785.0], [54.5, 785.0], [54.6, 785.0], [54.7, 785.0], [54.8, 808.0], [54.9, 808.0], [55.0, 808.0], [55.1, 808.0], [55.2, 808.0], [55.3, 808.0], [55.4, 808.0], [55.5, 808.0], [55.6, 865.0], [55.7, 865.0], [55.8, 865.0], [55.9, 865.0], [56.0, 865.0], [56.1, 865.0], [56.2, 865.0], [56.3, 865.0], [56.4, 869.0], [56.5, 869.0], [56.6, 869.0], [56.7, 869.0], [56.8, 869.0], [56.9, 869.0], [57.0, 869.0], [57.1, 869.0], [57.2, 874.0], [57.3, 874.0], [57.4, 874.0], [57.5, 874.0], [57.6, 874.0], [57.7, 874.0], [57.8, 874.0], [57.9, 874.0], [58.0, 963.0], [58.1, 963.0], [58.2, 963.0], [58.3, 963.0], [58.4, 963.0], [58.5, 963.0], [58.6, 963.0], [58.7, 963.0], [58.8, 964.0], [58.9, 964.0], [59.0, 964.0], [59.1, 964.0], [59.2, 964.0], [59.3, 964.0], [59.4, 964.0], [59.5, 964.0], [59.6, 979.0], [59.7, 979.0], [59.8, 979.0], [59.9, 979.0], [60.0, 979.0], [60.1, 979.0], [60.2, 979.0], [60.3, 979.0], [60.4, 1016.0], [60.5, 1016.0], [60.6, 1016.0], [60.7, 1016.0], [60.8, 1016.0], [60.9, 1016.0], [61.0, 1016.0], [61.1, 1016.0], [61.2, 1045.0], [61.3, 1045.0], [61.4, 1045.0], [61.5, 1045.0], [61.6, 1045.0], [61.7, 1045.0], [61.8, 1045.0], [61.9, 1045.0], [62.0, 1049.0], [62.1, 1049.0], [62.2, 1049.0], [62.3, 1049.0], [62.4, 1049.0], [62.5, 1049.0], [62.6, 1049.0], [62.7, 1055.0], [62.8, 1055.0], [62.9, 1055.0], [63.0, 1055.0], [63.1, 1055.0], [63.2, 1055.0], [63.3, 1055.0], [63.4, 1055.0], [63.5, 1069.0], [63.6, 1069.0], [63.7, 1069.0], [63.8, 1069.0], [63.9, 1069.0], [64.0, 1069.0], [64.1, 1069.0], [64.2, 1069.0], [64.3, 1096.0], [64.4, 1096.0], [64.5, 1096.0], [64.6, 1096.0], [64.7, 1096.0], [64.8, 1096.0], [64.9, 1096.0], [65.0, 1096.0], [65.1, 1135.0], [65.2, 1135.0], [65.3, 1135.0], [65.4, 1135.0], [65.5, 1135.0], [65.6, 1135.0], [65.7, 1135.0], [65.8, 1135.0], [65.9, 1148.0], [66.0, 1148.0], [66.1, 1148.0], [66.2, 1148.0], [66.3, 1148.0], [66.4, 1148.0], [66.5, 1148.0], [66.6, 1148.0], [66.7, 1160.0], [66.8, 1160.0], [66.9, 1160.0], [67.0, 1160.0], [67.1, 1160.0], [67.2, 1160.0], [67.3, 1160.0], [67.4, 1160.0], [67.5, 1190.0], [67.6, 1190.0], [67.7, 1190.0], [67.8, 1190.0], [67.9, 1190.0], [68.0, 1190.0], [68.1, 1190.0], [68.2, 1190.0], [68.3, 1222.0], [68.4, 1222.0], [68.5, 1222.0], [68.6, 1222.0], [68.7, 1222.0], [68.8, 1222.0], [68.9, 1222.0], [69.0, 1222.0], [69.1, 1277.0], [69.2, 1277.0], [69.3, 1277.0], [69.4, 1277.0], [69.5, 1277.0], [69.6, 1277.0], [69.7, 1277.0], [69.8, 1277.0], [69.9, 1288.0], [70.0, 1288.0], [70.1, 1288.0], [70.2, 1288.0], [70.3, 1288.0], [70.4, 1288.0], [70.5, 1288.0], [70.6, 1288.0], [70.7, 1297.0], [70.8, 1297.0], [70.9, 1297.0], [71.0, 1297.0], [71.1, 1297.0], [71.2, 1297.0], [71.3, 1297.0], [71.4, 1297.0], [71.5, 1327.0], [71.6, 1327.0], [71.7, 1327.0], [71.8, 1327.0], [71.9, 1327.0], [72.0, 1327.0], [72.1, 1327.0], [72.2, 1327.0], [72.3, 1357.0], [72.4, 1357.0], [72.5, 1357.0], [72.6, 1357.0], [72.7, 1357.0], [72.8, 1357.0], [72.9, 1357.0], [73.0, 1357.0], [73.1, 1381.0], [73.2, 1381.0], [73.3, 1381.0], [73.4, 1381.0], [73.5, 1381.0], [73.6, 1381.0], [73.7, 1381.0], [73.8, 1381.0], [73.9, 1453.0], [74.0, 1453.0], [74.1, 1453.0], [74.2, 1453.0], [74.3, 1453.0], [74.4, 1453.0], [74.5, 1453.0], [74.6, 1453.0], [74.7, 1458.0], [74.8, 1458.0], [74.9, 1458.0], [75.0, 1458.0], [75.1, 1458.0], [75.2, 1458.0], [75.3, 1458.0], [75.4, 1576.0], [75.5, 1576.0], [75.6, 1576.0], [75.7, 1576.0], [75.8, 1576.0], [75.9, 1576.0], [76.0, 1576.0], [76.1, 1576.0], [76.2, 1585.0], [76.3, 1585.0], [76.4, 1585.0], [76.5, 1585.0], [76.6, 1585.0], [76.7, 1585.0], [76.8, 1585.0], [76.9, 1585.0], [77.0, 1650.0], [77.1, 1650.0], [77.2, 1650.0], [77.3, 1650.0], [77.4, 1650.0], [77.5, 1650.0], [77.6, 1650.0], [77.7, 1650.0], [77.8, 1672.0], [77.9, 1672.0], [78.0, 1672.0], [78.1, 1672.0], [78.2, 1672.0], [78.3, 1672.0], [78.4, 1672.0], [78.5, 1672.0], [78.6, 1860.0], [78.7, 1860.0], [78.8, 1860.0], [78.9, 1860.0], [79.0, 1860.0], [79.1, 1860.0], [79.2, 1860.0], [79.3, 1860.0], [79.4, 1865.0], [79.5, 1865.0], [79.6, 1865.0], [79.7, 1865.0], [79.8, 1865.0], [79.9, 1865.0], [80.0, 1865.0], [80.1, 1865.0], [80.2, 1944.0], [80.3, 1944.0], [80.4, 1944.0], [80.5, 1944.0], [80.6, 1944.0], [80.7, 1944.0], [80.8, 1944.0], [80.9, 1944.0], [81.0, 1973.0], [81.1, 1973.0], [81.2, 1973.0], [81.3, 1973.0], [81.4, 1973.0], [81.5, 1973.0], [81.6, 1973.0], [81.7, 1973.0], [81.8, 2010.0], [81.9, 2010.0], [82.0, 2010.0], [82.1, 2010.0], [82.2, 2010.0], [82.3, 2010.0], [82.4, 2010.0], [82.5, 2010.0], [82.6, 2022.0], [82.7, 2022.0], [82.8, 2022.0], [82.9, 2022.0], [83.0, 2022.0], [83.1, 2022.0], [83.2, 2022.0], [83.3, 2022.0], [83.4, 2038.0], [83.5, 2038.0], [83.6, 2038.0], [83.7, 2038.0], [83.8, 2038.0], [83.9, 2038.0], [84.0, 2038.0], [84.1, 2038.0], [84.2, 2070.0], [84.3, 2070.0], [84.4, 2070.0], [84.5, 2070.0], [84.6, 2070.0], [84.7, 2070.0], [84.8, 2070.0], [84.9, 2070.0], [85.0, 2221.0], [85.1, 2221.0], [85.2, 2221.0], [85.3, 2221.0], [85.4, 2221.0], [85.5, 2221.0], [85.6, 2221.0], [85.7, 2221.0], [85.8, 2252.0], [85.9, 2252.0], [86.0, 2252.0], [86.1, 2252.0], [86.2, 2252.0], [86.3, 2252.0], [86.4, 2252.0], [86.5, 2252.0], [86.6, 2431.0], [86.7, 2431.0], [86.8, 2431.0], [86.9, 2431.0], [87.0, 2431.0], [87.1, 2431.0], [87.2, 2431.0], [87.3, 2431.0], [87.4, 2451.0], [87.5, 2451.0], [87.6, 2451.0], [87.7, 2451.0], [87.8, 2451.0], [87.9, 2451.0], [88.0, 2451.0], [88.1, 2462.0], [88.2, 2462.0], [88.3, 2462.0], [88.4, 2462.0], [88.5, 2462.0], [88.6, 2462.0], [88.7, 2462.0], [88.8, 2462.0], [88.9, 2465.0], [89.0, 2465.0], [89.1, 2465.0], [89.2, 2465.0], [89.3, 2465.0], [89.4, 2465.0], [89.5, 2465.0], [89.6, 2465.0], [89.7, 2467.0], [89.8, 2467.0], [89.9, 2467.0], [90.0, 2467.0], [90.1, 2467.0], [90.2, 2467.0], [90.3, 2467.0], [90.4, 2467.0], [90.5, 2532.0], [90.6, 2532.0], [90.7, 2532.0], [90.8, 2532.0], [90.9, 2532.0], [91.0, 2532.0], [91.1, 2532.0], [91.2, 2532.0], [91.3, 2591.0], [91.4, 2591.0], [91.5, 2591.0], [91.6, 2591.0], [91.7, 2591.0], [91.8, 2591.0], [91.9, 2591.0], [92.0, 2591.0], [92.1, 2661.0], [92.2, 2661.0], [92.3, 2661.0], [92.4, 2661.0], [92.5, 2661.0], [92.6, 2661.0], [92.7, 2661.0], [92.8, 2661.0], [92.9, 2695.0], [93.0, 2695.0], [93.1, 2695.0], [93.2, 2695.0], [93.3, 2695.0], [93.4, 2695.0], [93.5, 2695.0], [93.6, 2695.0], [93.7, 2706.0], [93.8, 2706.0], [93.9, 2706.0], [94.0, 2706.0], [94.1, 2706.0], [94.2, 2706.0], [94.3, 2706.0], [94.4, 2706.0], [94.5, 2769.0], [94.6, 2769.0], [94.7, 2769.0], [94.8, 2769.0], [94.9, 2769.0], [95.0, 2769.0], [95.1, 2769.0], [95.2, 2769.0], [95.3, 2931.0], [95.4, 2931.0], [95.5, 2931.0], [95.6, 2931.0], [95.7, 2931.0], [95.8, 2931.0], [95.9, 2931.0], [96.0, 2931.0], [96.1, 3212.0], [96.2, 3212.0], [96.3, 3212.0], [96.4, 3212.0], [96.5, 3212.0], [96.6, 3212.0], [96.7, 3212.0], [96.8, 3212.0], [96.9, 3222.0], [97.0, 3222.0], [97.1, 3222.0], [97.2, 3222.0], [97.3, 3222.0], [97.4, 3222.0], [97.5, 3222.0], [97.6, 3222.0], [97.7, 3623.0], [97.8, 3623.0], [97.9, 3623.0], [98.0, 3623.0], [98.1, 3623.0], [98.2, 3623.0], [98.3, 3623.0], [98.4, 3623.0], [98.5, 3730.0], [98.6, 3730.0], [98.7, 3730.0], [98.8, 3730.0], [98.9, 3730.0], [99.0, 3730.0], [99.1, 3730.0], [99.2, 3730.0], [99.3, 4191.0], [99.4, 4191.0], [99.5, 4191.0], [99.6, 4191.0], [99.7, 4191.0], [99.8, 4191.0], [99.9, 4191.0], [100.0, 4191.0]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[0.0, 1136.0], [0.1, 1136.0], [0.2, 1136.0], [0.3, 1136.0], [0.4, 1136.0], [0.5, 1136.0], [0.6, 1136.0], [0.7, 1136.0], [0.8, 1136.0], [0.9, 1138.0], [1.0, 1138.0], [1.1, 1138.0], [1.2, 1138.0], [1.3, 1138.0], [1.4, 1138.0], [1.5, 1138.0], [1.6, 1138.0], [1.7, 1138.0], [1.8, 1146.0], [1.9, 1146.0], [2.0, 1146.0], [2.1, 1146.0], [2.2, 1146.0], [2.3, 1146.0], [2.4, 1146.0], [2.5, 1146.0], [2.6, 1156.0], [2.7, 1156.0], [2.8, 1156.0], [2.9, 1156.0], [3.0, 1156.0], [3.1, 1156.0], [3.2, 1156.0], [3.3, 1156.0], [3.4, 1156.0], [3.5, 1156.0], [3.6, 1156.0], [3.7, 1156.0], [3.8, 1156.0], [3.9, 1156.0], [4.0, 1156.0], [4.1, 1156.0], [4.2, 1156.0], [4.3, 1167.0], [4.4, 1167.0], [4.5, 1167.0], [4.6, 1167.0], [4.7, 1167.0], [4.8, 1167.0], [4.9, 1167.0], [5.0, 1167.0], [5.1, 1167.0], [5.2, 1168.0], [5.3, 1168.0], [5.4, 1168.0], [5.5, 1168.0], [5.6, 1168.0], [5.7, 1168.0], [5.8, 1168.0], [5.9, 1168.0], [6.0, 1202.0], [6.1, 1202.0], [6.2, 1202.0], [6.3, 1202.0], [6.4, 1202.0], [6.5, 1202.0], [6.6, 1202.0], [6.7, 1202.0], [6.8, 1202.0], [6.9, 1223.0], [7.0, 1223.0], [7.1, 1223.0], [7.2, 1223.0], [7.3, 1223.0], [7.4, 1223.0], [7.5, 1223.0], [7.6, 1223.0], [7.7, 1224.0], [7.8, 1224.0], [7.9, 1224.0], [8.0, 1224.0], [8.1, 1224.0], [8.2, 1224.0], [8.3, 1224.0], [8.4, 1224.0], [8.5, 1224.0], [8.6, 1276.0], [8.7, 1276.0], [8.8, 1276.0], [8.9, 1276.0], [9.0, 1276.0], [9.1, 1276.0], [9.2, 1276.0], [9.3, 1276.0], [9.4, 1276.0], [9.5, 1278.0], [9.6, 1278.0], [9.7, 1278.0], [9.8, 1278.0], [9.9, 1278.0], [10.0, 1278.0], [10.1, 1278.0], [10.2, 1278.0], [10.3, 1280.0], [10.4, 1280.0], [10.5, 1280.0], [10.6, 1280.0], [10.7, 1280.0], [10.8, 1280.0], [10.9, 1280.0], [11.0, 1280.0], [11.1, 1280.0], [11.2, 1290.0], [11.3, 1290.0], [11.4, 1290.0], [11.5, 1290.0], [11.6, 1290.0], [11.7, 1290.0], [11.8, 1290.0], [11.9, 1290.0], [12.0, 1309.0], [12.1, 1309.0], [12.2, 1309.0], [12.3, 1309.0], [12.4, 1309.0], [12.5, 1309.0], [12.6, 1309.0], [12.7, 1309.0], [12.8, 1309.0], [12.9, 1345.0], [13.0, 1345.0], [13.1, 1345.0], [13.2, 1345.0], [13.3, 1345.0], [13.4, 1345.0], [13.5, 1345.0], [13.6, 1345.0], [13.7, 1364.0], [13.8, 1364.0], [13.9, 1364.0], [14.0, 1364.0], [14.1, 1364.0], [14.2, 1364.0], [14.3, 1364.0], [14.4, 1364.0], [14.5, 1364.0], [14.6, 1367.0], [14.7, 1367.0], [14.8, 1367.0], [14.9, 1367.0], [15.0, 1367.0], [15.1, 1367.0], [15.2, 1367.0], [15.3, 1367.0], [15.4, 1422.0], [15.5, 1422.0], [15.6, 1422.0], [15.7, 1422.0], [15.8, 1422.0], [15.9, 1422.0], [16.0, 1422.0], [16.1, 1422.0], [16.2, 1422.0], [16.3, 1444.0], [16.4, 1444.0], [16.5, 1444.0], [16.6, 1444.0], [16.7, 1444.0], [16.8, 1444.0], [16.9, 1444.0], [17.0, 1444.0], [17.1, 1489.0], [17.2, 1489.0], [17.3, 1489.0], [17.4, 1489.0], [17.5, 1489.0], [17.6, 1489.0], [17.7, 1489.0], [17.8, 1489.0], [17.9, 1489.0], [18.0, 1507.0], [18.1, 1507.0], [18.2, 1507.0], [18.3, 1507.0], [18.4, 1507.0], [18.5, 1507.0], [18.6, 1507.0], [18.7, 1507.0], [18.8, 1507.0], [18.9, 1513.0], [19.0, 1513.0], [19.1, 1513.0], [19.2, 1513.0], [19.3, 1513.0], [19.4, 1513.0], [19.5, 1513.0], [19.6, 1513.0], [19.7, 1536.0], [19.8, 1536.0], [19.9, 1536.0], [20.0, 1536.0], [20.1, 1536.0], [20.2, 1536.0], [20.3, 1536.0], [20.4, 1536.0], [20.5, 1536.0], [20.6, 1542.0], [20.7, 1542.0], [20.8, 1542.0], [20.9, 1542.0], [21.0, 1542.0], [21.1, 1542.0], [21.2, 1542.0], [21.3, 1542.0], [21.4, 1544.0], [21.5, 1544.0], [21.6, 1544.0], [21.7, 1544.0], [21.8, 1544.0], [21.9, 1544.0], [22.0, 1544.0], [22.1, 1544.0], [22.2, 1544.0], [22.3, 1547.0], [22.4, 1547.0], [22.5, 1547.0], [22.6, 1547.0], [22.7, 1547.0], [22.8, 1547.0], [22.9, 1547.0], [23.0, 1547.0], [23.1, 1549.0], [23.2, 1549.0], [23.3, 1549.0], [23.4, 1549.0], [23.5, 1549.0], [23.6, 1549.0], [23.7, 1549.0], [23.8, 1549.0], [23.9, 1549.0], [24.0, 1551.0], [24.1, 1551.0], [24.2, 1551.0], [24.3, 1551.0], [24.4, 1551.0], [24.5, 1551.0], [24.6, 1551.0], [24.7, 1551.0], [24.8, 1556.0], [24.9, 1556.0], [25.0, 1556.0], [25.1, 1556.0], [25.2, 1556.0], [25.3, 1556.0], [25.4, 1556.0], [25.5, 1556.0], [25.6, 1556.0], [25.7, 1562.0], [25.8, 1562.0], [25.9, 1562.0], [26.0, 1562.0], [26.1, 1562.0], [26.2, 1562.0], [26.3, 1562.0], [26.4, 1562.0], [26.5, 1582.0], [26.6, 1582.0], [26.7, 1582.0], [26.8, 1582.0], [26.9, 1582.0], [27.0, 1582.0], [27.1, 1582.0], [27.2, 1582.0], [27.3, 1582.0], [27.4, 1587.0], [27.5, 1587.0], [27.6, 1587.0], [27.7, 1587.0], [27.8, 1587.0], [27.9, 1587.0], [28.0, 1587.0], [28.1, 1587.0], [28.2, 1587.0], [28.3, 1624.0], [28.4, 1624.0], [28.5, 1624.0], [28.6, 1624.0], [28.7, 1624.0], [28.8, 1624.0], [28.9, 1624.0], [29.0, 1624.0], [29.1, 1630.0], [29.2, 1630.0], [29.3, 1630.0], [29.4, 1630.0], [29.5, 1630.0], [29.6, 1630.0], [29.7, 1630.0], [29.8, 1630.0], [29.9, 1630.0], [30.0, 1662.0], [30.1, 1662.0], [30.2, 1662.0], [30.3, 1662.0], [30.4, 1662.0], [30.5, 1662.0], [30.6, 1662.0], [30.7, 1662.0], [30.8, 1690.0], [30.9, 1690.0], [31.0, 1690.0], [31.1, 1690.0], [31.2, 1690.0], [31.3, 1690.0], [31.4, 1690.0], [31.5, 1690.0], [31.6, 1690.0], [31.7, 1697.0], [31.8, 1697.0], [31.9, 1697.0], [32.0, 1697.0], [32.1, 1697.0], [32.2, 1697.0], [32.3, 1697.0], [32.4, 1697.0], [32.5, 1710.0], [32.6, 1710.0], [32.7, 1710.0], [32.8, 1710.0], [32.9, 1710.0], [33.0, 1710.0], [33.1, 1710.0], [33.2, 1710.0], [33.3, 1710.0], [33.4, 1733.0], [33.5, 1733.0], [33.6, 1733.0], [33.7, 1733.0], [33.8, 1733.0], [33.9, 1733.0], [34.0, 1733.0], [34.1, 1733.0], [34.2, 1734.0], [34.3, 1734.0], [34.4, 1734.0], [34.5, 1734.0], [34.6, 1734.0], [34.7, 1734.0], [34.8, 1734.0], [34.9, 1734.0], [35.0, 1734.0], [35.1, 1743.0], [35.2, 1743.0], [35.3, 1743.0], [35.4, 1743.0], [35.5, 1743.0], [35.6, 1743.0], [35.7, 1743.0], [35.8, 1743.0], [35.9, 1785.0], [36.0, 1785.0], [36.1, 1785.0], [36.2, 1785.0], [36.3, 1785.0], [36.4, 1785.0], [36.5, 1785.0], [36.6, 1785.0], [36.7, 1785.0], [36.8, 1788.0], [36.9, 1788.0], [37.0, 1788.0], [37.1, 1788.0], [37.2, 1788.0], [37.3, 1788.0], [37.4, 1788.0], [37.5, 1788.0], [37.6, 1788.0], [37.7, 1804.0], [37.8, 1804.0], [37.9, 1804.0], [38.0, 1804.0], [38.1, 1804.0], [38.2, 1804.0], [38.3, 1804.0], [38.4, 1804.0], [38.5, 1807.0], [38.6, 1807.0], [38.7, 1807.0], [38.8, 1807.0], [38.9, 1807.0], [39.0, 1807.0], [39.1, 1807.0], [39.2, 1807.0], [39.3, 1807.0], [39.4, 1835.0], [39.5, 1835.0], [39.6, 1835.0], [39.7, 1835.0], [39.8, 1835.0], [39.9, 1835.0], [40.0, 1835.0], [40.1, 1835.0], [40.2, 1933.0], [40.3, 1933.0], [40.4, 1933.0], [40.5, 1933.0], [40.6, 1933.0], [40.7, 1933.0], [40.8, 1933.0], [40.9, 1933.0], [41.0, 1933.0], [41.1, 1978.0], [41.2, 1978.0], [41.3, 1978.0], [41.4, 1978.0], [41.5, 1978.0], [41.6, 1978.0], [41.7, 1978.0], [41.8, 1978.0], [41.9, 2019.0], [42.0, 2019.0], [42.1, 2019.0], [42.2, 2019.0], [42.3, 2019.0], [42.4, 2019.0], [42.5, 2019.0], [42.6, 2019.0], [42.7, 2019.0], [42.8, 2022.0], [42.9, 2022.0], [43.0, 2022.0], [43.1, 2022.0], [43.2, 2022.0], [43.3, 2022.0], [43.4, 2022.0], [43.5, 2022.0], [43.6, 2065.0], [43.7, 2065.0], [43.8, 2065.0], [43.9, 2065.0], [44.0, 2065.0], [44.1, 2065.0], [44.2, 2065.0], [44.3, 2065.0], [44.4, 2065.0], [44.5, 2116.0], [44.6, 2116.0], [44.7, 2116.0], [44.8, 2116.0], [44.9, 2116.0], [45.0, 2116.0], [45.1, 2116.0], [45.2, 2116.0], [45.3, 2120.0], [45.4, 2120.0], [45.5, 2120.0], [45.6, 2120.0], [45.7, 2120.0], [45.8, 2120.0], [45.9, 2120.0], [46.0, 2120.0], [46.1, 2120.0], [46.2, 2134.0], [46.3, 2134.0], [46.4, 2134.0], [46.5, 2134.0], [46.6, 2134.0], [46.7, 2134.0], [46.8, 2134.0], [46.9, 2134.0], [47.0, 2134.0], [47.1, 2135.0], [47.2, 2135.0], [47.3, 2135.0], [47.4, 2135.0], [47.5, 2135.0], [47.6, 2135.0], [47.7, 2135.0], [47.8, 2135.0], [47.9, 2151.0], [48.0, 2151.0], [48.1, 2151.0], [48.2, 2151.0], [48.3, 2151.0], [48.4, 2151.0], [48.5, 2151.0], [48.6, 2151.0], [48.7, 2151.0], [48.8, 2166.0], [48.9, 2166.0], [49.0, 2166.0], [49.1, 2166.0], [49.2, 2166.0], [49.3, 2166.0], [49.4, 2166.0], [49.5, 2166.0], [49.6, 2216.0], [49.7, 2216.0], [49.8, 2216.0], [49.9, 2216.0], [50.0, 2216.0], [50.1, 2216.0], [50.2, 2216.0], [50.3, 2216.0], [50.4, 2216.0], [50.5, 2220.0], [50.6, 2220.0], [50.7, 2220.0], [50.8, 2220.0], [50.9, 2220.0], [51.0, 2220.0], [51.1, 2220.0], [51.2, 2220.0], [51.3, 2228.0], [51.4, 2228.0], [51.5, 2228.0], [51.6, 2228.0], [51.7, 2228.0], [51.8, 2228.0], [51.9, 2228.0], [52.0, 2228.0], [52.1, 2228.0], [52.2, 2250.0], [52.3, 2250.0], [52.4, 2250.0], [52.5, 2250.0], [52.6, 2250.0], [52.7, 2250.0], [52.8, 2250.0], [52.9, 2250.0], [53.0, 2261.0], [53.1, 2261.0], [53.2, 2261.0], [53.3, 2261.0], [53.4, 2261.0], [53.5, 2261.0], [53.6, 2261.0], [53.7, 2261.0], [53.8, 2261.0], [53.9, 2262.0], [54.0, 2262.0], [54.1, 2262.0], [54.2, 2262.0], [54.3, 2262.0], [54.4, 2262.0], [54.5, 2262.0], [54.6, 2262.0], [54.7, 2262.0], [54.8, 2268.0], [54.9, 2268.0], [55.0, 2268.0], [55.1, 2268.0], [55.2, 2268.0], [55.3, 2268.0], [55.4, 2268.0], [55.5, 2268.0], [55.6, 2323.0], [55.7, 2323.0], [55.8, 2323.0], [55.9, 2323.0], [56.0, 2323.0], [56.1, 2323.0], [56.2, 2323.0], [56.3, 2323.0], [56.4, 2323.0], [56.5, 2335.0], [56.6, 2335.0], [56.7, 2335.0], [56.8, 2335.0], [56.9, 2335.0], [57.0, 2335.0], [57.1, 2335.0], [57.2, 2335.0], [57.3, 2352.0], [57.4, 2352.0], [57.5, 2352.0], [57.6, 2352.0], [57.7, 2352.0], [57.8, 2352.0], [57.9, 2352.0], [58.0, 2352.0], [58.1, 2352.0], [58.2, 2353.0], [58.3, 2353.0], [58.4, 2353.0], [58.5, 2353.0], [58.6, 2353.0], [58.7, 2353.0], [58.8, 2353.0], [58.9, 2353.0], [59.0, 2425.0], [59.1, 2425.0], [59.2, 2425.0], [59.3, 2425.0], [59.4, 2425.0], [59.5, 2425.0], [59.6, 2425.0], [59.7, 2425.0], [59.8, 2425.0], [59.9, 2435.0], [60.0, 2435.0], [60.1, 2435.0], [60.2, 2435.0], [60.3, 2435.0], [60.4, 2435.0], [60.5, 2435.0], [60.6, 2435.0], [60.7, 2482.0], [60.8, 2482.0], [60.9, 2482.0], [61.0, 2482.0], [61.1, 2482.0], [61.2, 2482.0], [61.3, 2482.0], [61.4, 2482.0], [61.5, 2482.0], [61.6, 2484.0], [61.7, 2484.0], [61.8, 2484.0], [61.9, 2484.0], [62.0, 2484.0], [62.1, 2484.0], [62.2, 2484.0], [62.3, 2484.0], [62.4, 2538.0], [62.5, 2538.0], [62.6, 2538.0], [62.7, 2538.0], [62.8, 2538.0], [62.9, 2538.0], [63.0, 2538.0], [63.1, 2538.0], [63.2, 2538.0], [63.3, 2550.0], [63.4, 2550.0], [63.5, 2550.0], [63.6, 2550.0], [63.7, 2550.0], [63.8, 2550.0], [63.9, 2550.0], [64.0, 2550.0], [64.1, 2550.0], [64.2, 2557.0], [64.3, 2557.0], [64.4, 2557.0], [64.5, 2557.0], [64.6, 2557.0], [64.7, 2557.0], [64.8, 2557.0], [64.9, 2557.0], [65.0, 2590.0], [65.1, 2590.0], [65.2, 2590.0], [65.3, 2590.0], [65.4, 2590.0], [65.5, 2590.0], [65.6, 2590.0], [65.7, 2590.0], [65.8, 2590.0], [65.9, 2649.0], [66.0, 2649.0], [66.1, 2649.0], [66.2, 2649.0], [66.3, 2649.0], [66.4, 2649.0], [66.5, 2649.0], [66.6, 2649.0], [66.7, 2667.0], [66.8, 2667.0], [66.9, 2667.0], [67.0, 2667.0], [67.1, 2667.0], [67.2, 2667.0], [67.3, 2667.0], [67.4, 2667.0], [67.5, 2667.0], [67.6, 2680.0], [67.7, 2680.0], [67.8, 2680.0], [67.9, 2680.0], [68.0, 2680.0], [68.1, 2680.0], [68.2, 2680.0], [68.3, 2680.0], [68.4, 2696.0], [68.5, 2696.0], [68.6, 2696.0], [68.7, 2696.0], [68.8, 2696.0], [68.9, 2696.0], [69.0, 2696.0], [69.1, 2696.0], [69.2, 2696.0], [69.3, 2757.0], [69.4, 2757.0], [69.5, 2757.0], [69.6, 2757.0], [69.7, 2757.0], [69.8, 2757.0], [69.9, 2757.0], [70.0, 2757.0], [70.1, 2775.0], [70.2, 2775.0], [70.3, 2775.0], [70.4, 2775.0], [70.5, 2775.0], [70.6, 2775.0], [70.7, 2775.0], [70.8, 2775.0], [70.9, 2775.0], [71.0, 2776.0], [71.1, 2776.0], [71.2, 2776.0], [71.3, 2776.0], [71.4, 2776.0], [71.5, 2776.0], [71.6, 2776.0], [71.7, 2776.0], [71.8, 2794.0], [71.9, 2794.0], [72.0, 2794.0], [72.1, 2794.0], [72.2, 2794.0], [72.3, 2794.0], [72.4, 2794.0], [72.5, 2794.0], [72.6, 2794.0], [72.7, 2838.0], [72.8, 2838.0], [72.9, 2838.0], [73.0, 2838.0], [73.1, 2838.0], [73.2, 2838.0], [73.3, 2838.0], [73.4, 2838.0], [73.5, 2838.0], [73.6, 2989.0], [73.7, 2989.0], [73.8, 2989.0], [73.9, 2989.0], [74.0, 2989.0], [74.1, 2989.0], [74.2, 2989.0], [74.3, 2989.0], [74.4, 3013.0], [74.5, 3013.0], [74.6, 3013.0], [74.7, 3013.0], [74.8, 3013.0], [74.9, 3013.0], [75.0, 3013.0], [75.1, 3013.0], [75.2, 3013.0], [75.3, 3064.0], [75.4, 3064.0], [75.5, 3064.0], [75.6, 3064.0], [75.7, 3064.0], [75.8, 3064.0], [75.9, 3064.0], [76.0, 3064.0], [76.1, 3098.0], [76.2, 3098.0], [76.3, 3098.0], [76.4, 3098.0], [76.5, 3098.0], [76.6, 3098.0], [76.7, 3098.0], [76.8, 3098.0], [76.9, 3098.0], [77.0, 3151.0], [77.1, 3151.0], [77.2, 3151.0], [77.3, 3151.0], [77.4, 3151.0], [77.5, 3151.0], [77.6, 3151.0], [77.7, 3151.0], [77.8, 3165.0], [77.9, 3165.0], [78.0, 3165.0], [78.1, 3165.0], [78.2, 3165.0], [78.3, 3165.0], [78.4, 3165.0], [78.5, 3165.0], [78.6, 3165.0], [78.7, 3200.0], [78.8, 3200.0], [78.9, 3200.0], [79.0, 3200.0], [79.1, 3200.0], [79.2, 3200.0], [79.3, 3200.0], [79.4, 3200.0], [79.5, 3227.0], [79.6, 3227.0], [79.7, 3227.0], [79.8, 3227.0], [79.9, 3227.0], [80.0, 3227.0], [80.1, 3227.0], [80.2, 3227.0], [80.3, 3227.0], [80.4, 3330.0], [80.5, 3330.0], [80.6, 3330.0], [80.7, 3330.0], [80.8, 3330.0], [80.9, 3330.0], [81.0, 3330.0], [81.1, 3330.0], [81.2, 3353.0], [81.3, 3353.0], [81.4, 3353.0], [81.5, 3353.0], [81.6, 3353.0], [81.7, 3353.0], [81.8, 3353.0], [81.9, 3353.0], [82.0, 3353.0], [82.1, 3399.0], [82.2, 3399.0], [82.3, 3399.0], [82.4, 3399.0], [82.5, 3399.0], [82.6, 3399.0], [82.7, 3399.0], [82.8, 3399.0], [82.9, 3399.0], [83.0, 3404.0], [83.1, 3404.0], [83.2, 3404.0], [83.3, 3404.0], [83.4, 3404.0], [83.5, 3404.0], [83.6, 3404.0], [83.7, 3404.0], [83.8, 3414.0], [83.9, 3414.0], [84.0, 3414.0], [84.1, 3414.0], [84.2, 3414.0], [84.3, 3414.0], [84.4, 3414.0], [84.5, 3414.0], [84.6, 3414.0], [84.7, 3432.0], [84.8, 3432.0], [84.9, 3432.0], [85.0, 3432.0], [85.1, 3432.0], [85.2, 3432.0], [85.3, 3432.0], [85.4, 3432.0], [85.5, 3491.0], [85.6, 3491.0], [85.7, 3491.0], [85.8, 3491.0], [85.9, 3491.0], [86.0, 3491.0], [86.1, 3491.0], [86.2, 3491.0], [86.3, 3491.0], [86.4, 3672.0], [86.5, 3672.0], [86.6, 3672.0], [86.7, 3672.0], [86.8, 3672.0], [86.9, 3672.0], [87.0, 3672.0], [87.1, 3672.0], [87.2, 3734.0], [87.3, 3734.0], [87.4, 3734.0], [87.5, 3734.0], [87.6, 3734.0], [87.7, 3734.0], [87.8, 3734.0], [87.9, 3734.0], [88.0, 3734.0], [88.1, 3760.0], [88.2, 3760.0], [88.3, 3760.0], [88.4, 3760.0], [88.5, 3760.0], [88.6, 3760.0], [88.7, 3760.0], [88.8, 3760.0], [88.9, 3813.0], [89.0, 3813.0], [89.1, 3813.0], [89.2, 3813.0], [89.3, 3813.0], [89.4, 3813.0], [89.5, 3813.0], [89.6, 3813.0], [89.7, 3813.0], [89.8, 3854.0], [89.9, 3854.0], [90.0, 3854.0], [90.1, 3854.0], [90.2, 3854.0], [90.3, 3854.0], [90.4, 3854.0], [90.5, 3854.0], [90.6, 3914.0], [90.7, 3914.0], [90.8, 3914.0], [90.9, 3914.0], [91.0, 3914.0], [91.1, 3914.0], [91.2, 3914.0], [91.3, 3914.0], [91.4, 3914.0], [91.5, 3984.0], [91.6, 3984.0], [91.7, 3984.0], [91.8, 3984.0], [91.9, 3984.0], [92.0, 3984.0], [92.1, 3984.0], [92.2, 3984.0], [92.3, 3984.0], [92.4, 4112.0], [92.5, 4112.0], [92.6, 4112.0], [92.7, 4112.0], [92.8, 4112.0], [92.9, 4112.0], [93.0, 4112.0], [93.1, 4112.0], [93.2, 4193.0], [93.3, 4193.0], [93.4, 4193.0], [93.5, 4193.0], [93.6, 4193.0], [93.7, 4193.0], [93.8, 4193.0], [93.9, 4193.0], [94.0, 4193.0], [94.1, 4289.0], [94.2, 4289.0], [94.3, 4289.0], [94.4, 4289.0], [94.5, 4289.0], [94.6, 4289.0], [94.7, 4289.0], [94.8, 4289.0], [94.9, 4329.0], [95.0, 4329.0], [95.1, 4329.0], [95.2, 4329.0], [95.3, 4329.0], [95.4, 4329.0], [95.5, 4329.0], [95.6, 4329.0], [95.7, 4329.0], [95.8, 4782.0], [95.9, 4782.0], [96.0, 4782.0], [96.1, 4782.0], [96.2, 4782.0], [96.3, 4782.0], [96.4, 4782.0], [96.5, 4782.0], [96.6, 5211.0], [96.7, 5211.0], [96.8, 5211.0], [96.9, 5211.0], [97.0, 5211.0], [97.1, 5211.0], [97.2, 5211.0], [97.3, 5211.0], [97.4, 5211.0], [97.5, 5536.0], [97.6, 5536.0], [97.7, 5536.0], [97.8, 5536.0], [97.9, 5536.0], [98.0, 5536.0], [98.1, 5536.0], [98.2, 5536.0], [98.3, 5755.0], [98.4, 5755.0], [98.5, 5755.0], [98.6, 5755.0], [98.7, 5755.0], [98.8, 5755.0], [98.9, 5755.0], [99.0, 5755.0], [99.1, 5755.0], [99.2, 7292.0], [99.3, 7292.0], [99.4, 7292.0], [99.5, 7292.0], [99.6, 7292.0], [99.7, 7292.0], [99.8, 7292.0], [99.9, 7292.0]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 18.0, "series": [{"data": [[600.0, 7.0], [700.0, 10.0], [800.0, 4.0], [900.0, 7.0], [1000.0, 6.0], [1100.0, 5.0], [1200.0, 4.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 5.0], [100.0, 16.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 3.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 1.0], [200.0, 15.0], [3200.0, 1.0], [3400.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4100.0, 1.0], [300.0, 6.0], [400.0, 7.0], [500.0, 8.0]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[600.0, 13.0], [700.0, 12.0], [800.0, 10.0], [900.0, 7.0], [1000.0, 2.0], [1100.0, 6.0], [1200.0, 5.0], [1300.0, 6.0], [1400.0, 4.0], [1500.0, 8.0], [1600.0, 5.0], [1700.0, 5.0], [1800.0, 5.0], [1900.0, 5.0], [2000.0, 1.0], [2100.0, 6.0], [2200.0, 4.0], [2300.0, 7.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 1.0], [3400.0, 1.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [4500.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [500.0, 16.0]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[600.0, 5.0], [700.0, 5.0], [800.0, 4.0], [900.0, 3.0], [1000.0, 6.0], [1100.0, 4.0], [1200.0, 4.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 2.0], [100.0, 18.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 4.0], [2200.0, 2.0], [2400.0, 5.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [2900.0, 1.0], [200.0, 13.0], [3200.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [4100.0, 1.0], [300.0, 12.0], [400.0, 9.0], [500.0, 7.0]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[1100.0, 7.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 12.0], [1600.0, 5.0], [1700.0, 6.0], [1800.0, 3.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 6.0], [2300.0, 4.0], [2200.0, 7.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 4.0], [2900.0, 1.0], [3000.0, 3.0], [3100.0, 2.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 4.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 2.0], [4100.0, 2.0], [4300.0, 1.0], [4200.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [7200.0, 1.0]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 232.0, "series": [{"data": [[0.0, 95.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 198.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 232.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 43.283018867924525, "minX": 1.76086662E12, "maxY": 43.283018867924525, "series": [{"data": [[1.76086662E12, 43.283018867924525]], "isOverall": false, "label": "Usuarios concurrentes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76086662E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 135.0, "minX": 1.0, "maxY": 7292.0, "series": [{"data": [[32.0, 574.0], [33.0, 1193.0], [34.0, 802.0], [35.0, 564.0], [36.0, 821.5], [37.0, 1067.6666666666667], [39.0, 1050.0], [41.0, 368.5], [42.0, 1059.0], [43.0, 1845.3333333333335], [44.0, 139.0], [47.0, 1163.0], [49.0, 1526.0], [50.0, 1132.3103448275867], [6.0, 3466.0], [11.0, 266.0], [12.0, 2297.0], [13.0, 708.0], [14.0, 592.5], [16.0, 592.0], [1.0, 3752.0], [17.0, 221.0], [21.0, 318.0], [22.0, 1825.0], [23.0, 242.66666666666666], [26.0, 1268.0], [27.0, 1518.0], [28.0, 753.0], [29.0, 774.0], [30.0, 1333.0], [31.0, 322.0]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[42.948529411764696, 1091.7352941176466]], "isOverall": false, "label": "GET - Status 200-Aggregated", "isController": false}, {"data": [[33.0, 1656.3333333333333], [32.0, 2107.0], [35.0, 729.0], [37.0, 1879.0], [36.0, 1481.0], [39.0, 664.0], [38.0, 1876.0], [40.0, 661.0], [41.0, 2109.3333333333335], [42.0, 677.5], [43.0, 653.0], [44.0, 1887.5], [45.0, 1784.3333333333333], [47.0, 1269.75], [46.0, 1143.0], [48.0, 1327.5], [50.0, 1593.1609195402298], [8.0, 1180.0], [10.0, 1811.6666666666667], [11.0, 2496.0], [13.0, 1418.6666666666667], [14.0, 1863.0], [16.0, 1653.0], [18.0, 2666.0], [20.0, 1009.0], [22.0, 1764.6666666666667], [23.0, 2311.0], [24.0, 1959.0], [25.0, 1669.0], [28.0, 858.0], [29.0, 2240.4], [30.0, 2233.0], [31.0, 1504.0]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[42.09933774834436, 1594.6953642384105]], "isOverall": false, "label": "GET - Información básica-Aggregated", "isController": false}, {"data": [[33.0, 1096.0], [2.0, 2931.0], [34.0, 195.5], [35.0, 146.0], [37.0, 1067.6], [39.0, 422.0], [40.0, 158.0], [41.0, 1357.0], [42.0, 179.0], [43.0, 2178.0], [45.0, 1064.0], [47.0, 1027.0], [48.0, 2844.5], [49.0, 828.0], [3.0, 3730.0], [50.0, 913.4024390243906], [4.0, 4191.0], [12.0, 211.0], [20.0, 1743.0], [21.0, 737.0], [23.0, 979.0], [24.0, 334.0], [25.0, 2107.0], [26.0, 2462.0], [28.0, 1016.0], [30.0, 775.3333333333334], [31.0, 135.0]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[43.96031746031747, 1033.8730158730157]], "isOverall": false, "label": "GET - Status 404-Aggregated", "isController": false}, {"data": [[32.0, 1987.0], [34.0, 2590.0], [39.0, 2135.0], [40.0, 3064.0], [41.0, 3985.5], [42.0, 3353.0], [43.0, 1168.0], [44.0, 2713.5], [45.0, 2905.3333333333335], [46.0, 1788.0], [47.0, 5211.0], [48.0, 3135.0], [50.0, 2308.0602409638573], [5.0, 3098.0], [7.0, 2557.0], [8.0, 2482.0], [9.0, 2425.0], [13.0, 1549.0], [15.0, 3414.0], [16.0, 1804.0], [17.0, 1489.0], [19.0, 7292.0], [21.0, 2435.0], [22.0, 1807.0], [24.0, 2262.0], [28.0, 1547.0], [29.0, 1587.0]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}, {"data": [[44.47008547008547, 2418.4444444444434]], "isOverall": false, "label": "GET - Delay 1s-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1089.5333333333333, "minX": 1.76086662E12, "maxY": 3339.3, "series": [{"data": [[1.76086662E12, 3339.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.76086662E12, 1089.5333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76086662E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1033.8730158730157, "minX": 1.76086662E12, "maxY": 2418.4444444444434, "series": [{"data": [[1.76086662E12, 1091.7352941176466]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[1.76086662E12, 1594.6953642384105]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[1.76086662E12, 1033.8730158730157]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[1.76086662E12, 2418.4444444444434]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76086662E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1033.8730158730157, "minX": 1.76086662E12, "maxY": 2418.3760683760684, "series": [{"data": [[1.76086662E12, 1091.7352941176466]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[1.76086662E12, 1594.5430463576167]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[1.76086662E12, 1033.8730158730157]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[1.76086662E12, 2418.3760683760684]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76086662E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.76086662E12, "maxY": 478.7682119205298, "series": [{"data": [[1.76086662E12, 0.0]], "isOverall": false, "label": "GET - Status 200", "isController": false}, {"data": [[1.76086662E12, 478.7682119205298]], "isOverall": false, "label": "GET - Información básica", "isController": false}, {"data": [[1.76086662E12, 0.0]], "isOverall": false, "label": "GET - Status 404", "isController": false}, {"data": [[1.76086662E12, 0.0]], "isOverall": false, "label": "GET - Delay 1s", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76086662E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 135.0, "minX": 1.76086662E12, "maxY": 7292.0, "series": [{"data": [[1.76086662E12, 7292.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.76086662E12, 3058.0000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.76086662E12, 5151.260000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.76086662E12, 3746.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.76086662E12, 135.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.76086662E12, 1280.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76086662E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 170.0, "minX": 1.0, "maxY": 2466.0, "series": [{"data": [[35.0, 968.0], [34.0, 1045.0], [36.0, 1096.0], [10.0, 2081.0], [41.0, 1222.0], [42.0, 1522.5], [11.0, 1709.5], [12.0, 1032.0], [1.0, 2466.0], [18.0, 1805.5], [5.0, 592.0], [20.0, 732.0], [26.0, 1381.0], [27.0, 1469.0], [28.0, 1222.0], [29.0, 1535.0], [30.0, 1286.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 170.0], [11.0, 1016.0], [26.0, 1706.0], [30.0, 910.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 42.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 170.0, "minX": 1.0, "maxY": 2462.0, "series": [{"data": [[35.0, 968.0], [34.0, 1045.0], [36.0, 1096.0], [10.0, 2081.0], [41.0, 1222.0], [42.0, 1522.5], [11.0, 1709.5], [12.0, 1031.5], [1.0, 2462.0], [18.0, 1805.5], [5.0, 592.0], [20.0, 732.0], [26.0, 1381.0], [27.0, 1469.0], [28.0, 1222.0], [29.0, 1535.0], [30.0, 1286.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 170.0], [11.0, 1016.0], [26.0, 1706.0], [30.0, 910.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 42.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.833333333333334, "minX": 1.76086662E12, "maxY": 8.833333333333334, "series": [{"data": [[1.76086662E12, 8.833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76086662E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.76086662E12, "maxY": 6.7, "series": [{"data": [[1.76086662E12, 6.7]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.76086662E12, 0.08333333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.76086662E12, 2.05]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.76086662E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.76086662E12, "maxY": 2.4833333333333334, "series": [{"data": [[1.76086662E12, 1.95]], "isOverall": false, "label": "GET - Delay 1s-success", "isController": false}, {"data": [[1.76086662E12, 2.05]], "isOverall": false, "label": "GET - Status 404-success", "isController": false}, {"data": [[1.76086662E12, 0.05]], "isOverall": false, "label": "GET - Status 404-failure", "isController": false}, {"data": [[1.76086662E12, 0.03333333333333333]], "isOverall": false, "label": "GET - Información básica-failure", "isController": false}, {"data": [[1.76086662E12, 2.4833333333333334]], "isOverall": false, "label": "GET - Información básica-success", "isController": false}, {"data": [[1.76086662E12, 2.2666666666666666]], "isOverall": false, "label": "GET - Status 200-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76086662E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.76086662E12, "maxY": 8.75, "series": [{"data": [[1.76086662E12, 8.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.76086662E12, 0.08333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.76086662E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

